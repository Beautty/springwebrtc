package org.apache.jsp.sipml5;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class callim_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.List<java.lang.String> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.List<java.lang.String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<!-- head -->\n");
      out.write("<head>\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n");
      out.write("    <!-- <meta charset=\"utf-8\" /> -->\n");
      out.write("    <title>sipML5 live demo</title>\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <meta name=\"Keywords\" content=\"sipML5, VoIP, HTML5, WebRTC, RTCWeb, SIP, IMS, Video chat, VP8, live demo \" />\n");
      out.write("    <meta name=\"Description\" content=\"HTML5 SIP client using WebRTC framework\" />\n");
      out.write("    <meta name=\"author\" content=\"TCS Telecom\" />\n");
      out.write("\n");
      out.write("    <!-- SIPML5 API:\n");
      out.write("    DEBUG VERSION: 'SIPml-api.js'\n");
      out.write("    RELEASE VERSION: 'release/SIPml-api.js'\n");
      out.write("    -->\n");
      out.write("    <script src=\"SIPml-api.js?svn=179\" type=\"text/javascript\"> </script>\n");
      out.write("\n");
      out.write("    <!-- Styles -->\n");
      out.write("    <link href=\"./assets/css/bootstrap.css\" rel=\"stylesheet\" />\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("        body{\n");
      out.write("            padding-top: 80px;\n");
      out.write("            padding-bottom: 40px;\n");
      out.write("            background : url(../pageone/images/bg_blue.png) left top repeat ;\n");
      out.write("        }\n");
      out.write("        .navbar-inner-red {\n");
      out.write("        /*    background-color: #600000; \n");
      out.write("          background-image: url('../pageone/images/bg_blue.png') repeat-x;\n");
      out.write("          background-repeat: no-repeat; */\n");
      out.write("          \n");
      out.write("          filter: none;\n");
      out.write("        }\n");
      out.write("        .full-screen{\n");
      out.write("            position: absolute;\n");
      out.write("            left: 0;\n");
      out.write("            top: 0;\n");
      out.write("            width: 100%;\n");
      out.write("            height: 100%;\n");
      out.write("            overflow: hidden;\n");
      out.write("        }\n");
      out.write("        .normal-screen{\n");
      out.write("            position: relative;\n");
      out.write("        }\n");
      out.write("        .call-options {\n");
      out.write("          padding: 5px;\n");
      out.write("          background-color: #f0f0f0;\n");
      out.write("          border: 1px solid #eee;\n");
      out.write("          border: 1px solid rgba(0, 0, 0, 0.08);\n");
      out.write("          -webkit-border-radius: 4px;\n");
      out.write("          -moz-border-radius: 4px;\n");
      out.write("          border-radius: 4px;\n");
      out.write("          -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\n");
      out.write("          -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\n");
      out.write("          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\n");
      out.write("          -webkit-transition-property: opacity;\n");
      out.write("          -moz-transition-property: opacity; \n");
      out.write("          -o-transition-property: opacity; \n");
      out.write("          -webkit-transition-duration: 2s;\n");
      out.write("          -moz-transition-duration: 2s;\n");
      out.write("          -o-transition-duration: 2s;\n");
      out.write("        }\n");
      out.write("        .tab-video,\n");
      out.write("        .div-video{\n");
      out.write("            width: 100%; \n");
      out.write("            height: 0px; \n");
      out.write("            -webkit-transition-property: height;\n");
      out.write("            -moz-transition-property: height;\n");
      out.write("            -o-transition-property: height;\n");
      out.write("            -webkit-transition-duration: 2s;\n");
      out.write("            -moz-transition-duration: 2s;\n");
      out.write("            -o-transition-duration: 2s;\n");
      out.write("        }\n");
      out.write("        .label-align {\n");
      out.write("            display: block;\n");
      out.write("            padding-left: 15px;\n");
      out.write("            text-indent: -15px;\n");
      out.write("        }\n");
      out.write("        .input-align {\n");
      out.write("            width: 13px;\n");
      out.write("            height: 13px;\n");
      out.write("            padding: 0;\n");
      out.write("            margin:0;\n");
      out.write("            vertical-align: bottom;\n");
      out.write("            position: relative;\n");
      out.write("            top: -1px;\n");
      out.write("            *overflow: hidden;\n");
      out.write("        }\n");
      out.write("        .glass-panel{\n");
      out.write("            z-index: 99;\n");
      out.write("            position: fixed;\n");
      out.write("            width: 100%;\n");
      out.write("            height: 100%;\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            top: 0;\n");
      out.write("            left: 0;\n");
      out.write("            opacity: 0.8;\n");
      out.write("            background-color: Gray;\n");
      out.write("        }\n");
      out.write("        .div-keypad {\n");
      out.write("            z-index: 100;\n");
      out.write("            position: fixed;\n");
      out.write("            -moz-transition-property: left top;\n");
      out.write("            -o-transition-property: left top;\n");
      out.write("            -webkit-transition-duration: 2s;\n");
      out.write("            -moz-transition-duration: 2s;\n");
      out.write("            -o-transition-duration: 2s;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("    </style>\n");
      out.write("    <link href=\"./assets/css/bootstrap-responsive.css\" rel=\"stylesheet\" />\n");
      out.write("    <!-- Le fav and touch icons -->\n");
      out.write("    <link rel=\"shortcut icon\" href=\"./assets/ico/favicon.ico\" />\n");
      out.write("    <link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"./assets/ico/apple-touch-icon-114-precomposed.png\" />\n");
      out.write("    <link rel=\"apple-touch-icon-precomposed\" sizes=\"72x72\" href=\"./assets/ico/apple-touch-icon-72-precomposed.png\" />\n");
      out.write("    <link rel=\"apple-touch-icon-precomposed\" href=\"./assets/ico/apple-touch-icon-57-precomposed.png\" />\n");
      out.write("    <link href=\"./assets/style/gemoticons.css\" type=\"text/css\" rel=\"stylesheet\" />\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<!-- Javascript code -->\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("\tvar arr;  //Array Variable declared globally\n");
      out.write("\tvar xmlHttpRequest;\n");
      out.write("\tif(window.XMLHttpRequest)\n");
      out.write("\t{\n");
      out.write("\txmlHttpRequest=new XMLHttpRequest();\n");
      out.write("\t}\n");
      out.write("\telse if(window.ActiveXObject)\n");
      out.write("\t{\n");
      out.write("\txmlHttpRequest=new ActiveXObject(MICROSOFT.XMLHTTP);\n");
      out.write("\t}\n");
      out.write("    var sTransferNumber;\n");
      out.write("    var oRingTone, oRingbackTone;\n");
      out.write("    var oSipStack, oSipSessionRegister, oSipSessionCall, oSipSessionTransferCall;\n");
      out.write("    var videoRemote, videoLocal, audioRemote;\n");
      out.write("    var bFullScreen = false;\n");
      out.write("    var oNotifICall;\n");
      out.write("    var oReadyStateTimer;\n");
      out.write("    var bDisableVideo = false;\n");
      out.write("    var viewVideoLocal, viewVideoRemote; // <video> (webrtc) or <div> (webrtc4all)\n");
      out.write("    var oConfigCall;\n");
      out.write("    var oConfigMsg;\n");
      out.write("    var oSipSessionMessage;\n");
      out.write("    var oSipPublish;\n");
      out.write("    var subscribeSession;\n");
      out.write("    var oConfigSub;\n");
      out.write("    var infoArray=new Array(20);\n");
      out.write("    var r;\n");
      out.write("   var to=new Array();\n");
      out.write("  // var to;\n");
      out.write("    var friendslist = new Array();\n");
      out.write("    var friends = new Array();\n");
      out.write("    var chkURI=new Array();\n");
      out.write("    var xmlHttpRequest;\n");
      out.write("    \n");
      out.write("    var msgId=0;\n");
      out.write("    var extraContent;\n");
      out.write("    var addInt;\n");
      out.write("    var finalMsg;\n");
      out.write("    var mainCont;\n");
      out.write("\n");
      out.write("\n");
      out.write("    C = \n");
      out.write("    {\n");
      out.write("        divKeyPadWidth: 220\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    window.onload = function () {\n");
      out.write("        if(window.console) {\n");
      out.write("            window.console.info(\"location=\" + window.location);\n");
      out.write("        }\n");
      out.write("        videoLocal = document.getElementById(\"video_local\");\n");
      out.write("        videoRemote = document.getElementById(\"video_remote\");\n");
      out.write("        audioRemote = document.getElementById(\"audio_remote\");\n");
      out.write("\n");
      out.write("        document.onkeyup = onKeyUp;\n");
      out.write("        document.body.onkeyup = onKeyUp;\n");
      out.write("        divCallCtrl.onmousemove = onDivCallCtrlMouseMove;\n");
      out.write("\n");
      out.write("        // set debug level\n");
      out.write("        SIPml.setDebugLevel((window.localStorage && window.localStorage.getItem('org.doubango.expert.disable_debug') == \"true\") ? \"error\" : \"info\");\n");
      out.write("\n");
      out.write("        loadCredentials();\n");
      out.write("        loadCallOptions();\n");
      out.write("\n");
      out.write("        // Initialize call button\n");
      out.write("        uiBtnCallSetText(\"Call\");\n");
      out.write("\n");
      out.write("        oReadyStateTimer = setInterval(function () {\n");
      out.write("            if (document.readyState === \"complete\") {\n");
      out.write("                clearInterval(oReadyStateTimer);\n");
      out.write("                // initialize SIPML5\n");
      out.write("                SIPml.init(postInit);\n");
      out.write("            }\n");
      out.write("        },\n");
      out.write("        500);\n");
      out.write("dummyRegister();\n");
      out.write("        \n");
      out.write("        if (uRIContactPage.value!=\"null\"){\n");
      out.write("           // alert(\"changing\");\n");
      out.write("        \ttxtPhoneNumber.value=uRIContactPage.value;\n");
      out.write("        \tuRIContactPage.value=\"null\";\n");
      out.write("        \t//alert(\"entering sip call\");\n");
      out.write("        \tsetTimeout(function(){sipCall(\"call-audiovideo\"); },1000);\n");
      out.write("        \t       }\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    window.onbeforeunload = function saveAllData()\n");
      out.write("    {\n");
      out.write("        \n");
      out.write("        sipUnRegister();\n");
      out.write("        //return true;                      //comment out 'return' to suppress prompt\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    //read server ip from file\n");
      out.write("    var ip;\n");
      out.write("   function readip()\n");
      out.write("   {\n");
      out.write("   var pathOfFileToRead = \"presentation_server_config.txt\";\n");
      out.write("\n");
      out.write("   ip = FileHelper.readStringFromFileAtPath\n");
      out.write("   \t(\n");
      out.write("   \t\tpathOfFileToRead\n");
      out.write("   \t);\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   function FileHelper()\n");
      out.write("   {}\n");
      out.write("   {\n");
      out.write("   \tFileHelper.readStringFromFileAtPath = function(pathOfFileToReadFrom)\n");
      out.write("   \t{\n");
      out.write("   \t\tvar request = new XMLHttpRequest();\n");
      out.write("   \t\trequest.open(\"GET\", pathOfFileToReadFrom, false);\n");
      out.write("   \t\trequest.send(null);\n");
      out.write("   \t\tvar returnValue = request.responseText;\n");
      out.write("   \t\treturn returnValue;\n");
      out.write("   \t}\n");
      out.write("   }\n");
      out.write("    readip();\n");
      out.write("   // alert(\"ip \"+ip);\n");
      out.write("   \n");
      out.write("   function sendDataToDiv(from,message)\n");
      out.write("\t{\n");
      out.write("\t$(document).ready(function(){\n");
      out.write("\t\tvar text=$('<div class=\"chat\" style=\"color:gray\">'+from+' : '+ message+ '</div>');\n");
      out.write("\t\t$('.chatbox').append(text);\n");
      out.write("\t\t$(text).gemoticon();\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("    //fetch buddy list\n");
      out.write("    function main()\n");
      out.write(" {\n");
      out.write(" \tvar pathOfFileToRead = \"friend.txt\";\n");
      out.write(" \tvar contentsOfFileAsString = FileHelper.readStringFromFileAtPath(pathOfFileToRead);\n");
      out.write(" \tfriendslist=contentsOfFileAsString;\n");
      out.write(" \t//alert(\"frined list \"+ friendslist);\n");
      out.write(" } \n");
      out.write("     \n");
      out.write("    function FileHelper()\n");
      out.write("    {}\n");
      out.write("\n");
      out.write("    {\n");
      out.write("    \tFileHelper.readStringFromFileAtPath = function(pathOfFileToReadFrom)\n");
      out.write("    \t{\n");
      out.write("    \t\tvar request = new XMLHttpRequest();\n");
      out.write("    \t\trequest.open(\"GET\", pathOfFileToReadFrom, false);\n");
      out.write("    \t\trequest.send(null);\n");
      out.write("    \t\t//var returnValue = request.responseText;\n");
      out.write("    \t\tfriends = request.responseText.split(\"\\n\")\n");
      out.write("    \t\t//return returnValue;\n");
      out.write("    \t\treturn friends;\n");
      out.write("    \t}\n");
      out.write("    }\n");
      out.write("    main();\n");
      out.write("   // alert(\"friend \"+friends);\n");
      out.write("    \n");
      out.write("    function postInit() {\n");
      out.write("        // check webrtc4all version\n");
      out.write("        if (SIPml.isWebRtc4AllSupported() && SIPml.isWebRtc4AllPluginOutdated()) {            \n");
      out.write("            if (confirm(\"Your WebRtc4all extension is outdated (\"+SIPml.getWebRtc4AllVersion()+\"). A new version with critical bug fix is available. Do you want to install it?\\nIMPORTANT: You must restart your browser after the installation.\")) {\n");
      out.write("                window.location = 'http://code.google.com/p/webrtc4all/downloads/list';\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // check for WebRTC support\n");
      out.write("        if (!SIPml.isWebRtcSupported()) {\n");
      out.write("            // is it chrome?\n");
      out.write("            if (SIPml.getNavigatorFriendlyName() == 'chrome') {\n");
      out.write("                    if (confirm(\"You're using an old Chrome version or WebRTC is not enabled.\\nDo you want to see how to enable WebRTC?\")) {\n");
      out.write("                        window.location = 'http://www.webrtc.org/running-the-demos';\n");
      out.write("                    }\n");
      out.write("                    else {\n");
      out.write("                        window.location = \"index.html\";\n");
      out.write("                    }\n");
      out.write("                    return;\n");
      out.write("            }\n");
      out.write("                \n");
      out.write("            // for now the plugins (WebRTC4all only works on Windows)\n");
      out.write("            if (SIPml.getSystemFriendlyName() == 'windows') {\n");
      out.write("                // Internet explorer\n");
      out.write("                if (SIPml.getNavigatorFriendlyName() == 'ie') {\n");
      out.write("                    // Check for IE version \n");
      out.write("                    if (parseFloat(SIPml.getNavigatorVersion()) < 9.0) {\n");
      out.write("                        if (confirm(\"You are using an old IE version. You need at least version 9. Would you like to update IE?\")) {\n");
      out.write("                            window.location = 'http://windows.microsoft.com/en-us/internet-explorer/products/ie/home';\n");
      out.write("                        }\n");
      out.write("                        else {\n");
      out.write("                            window.location = \"index.html\";\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    // check for WebRTC4all extension\n");
      out.write("                    if (!SIPml.isWebRtc4AllSupported()) {\n");
      out.write("                        if (confirm(\"webrtc4all extension is not installed. Do you want to install it?\\nIMPORTANT: You must restart your browser after the installation.\")) {\n");
      out.write("                            window.location = 'http://code.google.com/p/webrtc4all/downloads/list';\n");
      out.write("                        }\n");
      out.write("                        else {\n");
      out.write("                            // Must do nothing: give the user the chance to accept the extension\n");
      out.write("                            // window.location = \"index.html\";\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    // break page loading ('window.location' won't stop JS execution)\n");
      out.write("                    if (!SIPml.isWebRtc4AllSupported()) {\n");
      out.write("                        return;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                else if (SIPml.getNavigatorFriendlyName() == \"safari\" || SIPml.getNavigatorFriendlyName() == \"firefox\" || SIPml.getNavigatorFriendlyName() == \"opera\") {\n");
      out.write("                    if (confirm(\"Your browser don't support WebRTC.\\nDo you want to install WebRTC4all extension to enjoy audio/video calls?\\nIMPORTANT: You must restart your browser after the installation.\")) {\n");
      out.write("                        window.location = 'http://code.google.com/p/webrtc4all/downloads/list';\n");
      out.write("                    }\n");
      out.write("                    else {\n");
      out.write("                        window.location = \"index.html\";\n");
      out.write("                    }\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            // OSX, Unix, Android, iOS...\n");
      out.write("            else {\n");
      out.write("                if (confirm('WebRTC not supported on your browser.\\nDo you want to download a WebRTC-capable browser?')) {\n");
      out.write("                    window.location = 'https://www.google.com/intl/en/chrome/browser/';\n");
      out.write("                }\n");
      out.write("                else {\n");
      out.write("                    window.location = \"index.html\";\n");
      out.write("                }\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // checks for WebSocket support\n");
      out.write("        if (!SIPml.isWebSocketSupported() && !SIPml.isWebRtc4AllSupported()) {\n");
      out.write("            if (confirm('Your browser don\\'t support WebSockets.\\nDo you want to download a WebSocket-capable browser?')) {\n");
      out.write("                window.location = 'https://www.google.com/intl/en/chrome/browser/';\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                window.location = \"index.html\";\n");
      out.write("            }\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // FIXME: displays must be per session\n");
      out.write("\n");
      out.write("        // attachs video displays\n");
      out.write("        if (SIPml.isWebRtc4AllSupported()) {\n");
      out.write("            viewVideoLocal = document.getElementById(\"divVideoLocal\");\n");
      out.write("            viewVideoRemote = document.getElementById(\"divVideoRemote\");\n");
      out.write("            WebRtc4all_SetDisplays(viewVideoLocal, viewVideoRemote); // FIXME: move to SIPml.* API\n");
      out.write("        }\n");
      out.write("        else{\n");
      out.write("            viewVideoLocal = videoLocal;\n");
      out.write("            viewVideoRemote = videoRemote;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        if (!SIPml.isWebRtc4AllSupported() && !SIPml.isWebRtcSupported()) {\n");
      out.write("            if (confirm('Your browser don\\'t support WebRTC.\\naudio/video calls will be disabled.\\nDo you want to download a WebRTC-capable browser?')) {\n");
      out.write("                window.location = 'https://www.google.com/intl/en/chrome/browser/';\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        btnRegister.disabled = false;\n");
      out.write("        document.body.style.cursor = 'default';\n");
      out.write("        oConfigCall = {\n");
      out.write("            audio_remote: audioRemote,\n");
      out.write("            video_local: viewVideoLocal,\n");
      out.write("            video_remote: viewVideoRemote,\n");
      out.write("            bandwidth: { audio:undefined, video:undefined },\n");
      out.write("            video_size: { minWidth:undefined, minHeight:undefined, maxWidth:undefined, maxHeight:undefined },\n");
      out.write("            events_listener: { events: '*', listener: onSipEventSession },\n");
      out.write("            sip_caps: [\n");
      out.write("                            { name: '+g.oma.sip-im' },\n");
      out.write("                            { name: '+sip.ice' },\n");
      out.write("                            { name: 'language', value: '\\\"en,fr\\\"' }\n");
      out.write("                        ]\n");
      out.write("        };\n");
      out.write("    }\n");
      out.write("\n");
      out.write("\n");
      out.write("    function loadCallOptions() {\n");
      out.write("        if (window.localStorage) {\n");
      out.write("            var s_value;\n");
      out.write("            if ((s_value = window.localStorage.getItem('org.doubango.call.phone_number'))) txtPhoneNumber.value = s_value;\n");
      out.write("            bDisableVideo = (window.localStorage.getItem('org.doubango.expert.disable_video') == \"true\");\n");
      out.write("\n");
      out.write("            txtCallStatus.innerHTML = '<i>Video ' + (bDisableVideo ? 'disabled' : 'enabled') + '</i>';\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function saveCallOptions() {\n");
      out.write("        if (window.localStorage) {\n");
      out.write("            window.localStorage.setItem('org.doubango.call.phone_number', txtPhoneNumber.value);\n");
      out.write("            window.localStorage.setItem('org.doubango.expert.disable_video', bDisableVideo ? \"true\" : \"false\");\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function loadCredentials() {\n");
      out.write("       /*  if (window.localStorage) {\n");
      out.write("            // IE retuns 'null' if not defined\n");
      out.write("            var s_value;\n");
      out.write("            if ((s_value = window.localStorage.getItem('org.doubango.identity.display_name'))) txtDisplayName.value = s_value;\n");
      out.write("            if ((s_value = window.localStorage.getItem('org.doubango.identity.impi'))) txtPrivateIdentity.value = s_value;\n");
      out.write("            if ((s_value = window.localStorage.getItem('org.doubango.identity.impu'))) txtPublicIdentity.value = s_value;\n");
      out.write("            if ((s_value = window.localStorage.getItem('org.doubango.identity.password'))) txtPassword.value = s_value;\n");
      out.write("            if ((s_value = window.localStorage.getItem('org.doubango.identity.realm'))) txtRealm.value = s_value;\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            /*txtDisplayName.value = \"005\";\n");
      out.write("            txtPrivateIdentity.value = \"005\";\n");
      out.write("            txtPublicIdentity.value = \"sip:005@192.168.0.28\";\n");
      out.write("            txtPassword.value = \"005\";\n");
      out.write("            txtRealm.value = \"192.168.0.28\";\n");
      out.write("            txtPhoneNumber.value = \"005\";\n");
      out.write("        } */\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    function saveCredentials() {\n");
      out.write("        \n");
      out.write("    \tif (window.localStorage) {\n");
      out.write("        \t\n");
      out.write("            window.localStorage.setItem('org.doubango.identity.display_name', txtDisplayName.value);\n");
      out.write("            window.localStorage.setItem('org.doubango.identity.impi', txtPrivateIdentity.value);\n");
      out.write("            window.localStorage.setItem('org.doubango.identity.impu', txtPublicIdentity.value);\n");
      out.write("            window.localStorage.setItem('org.doubango.identity.password', txtPassword.value);\n");
      out.write("            window.localStorage.setItem('org.doubango.identity.realm', txtRealm.value);\n");
      out.write("            \n");
      out.write("          //  alert (\"save credentails func :\"+ txtPublicIdentity.value );\n");
      out.write("        }\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    // sends SIP REGISTER request to login\n");
      out.write("    function sipRegister() {\n");
      out.write("        // catch exception for IE (DOM not ready)\n");
      out.write("       // alert (\"sip register func :\"+ txtPublicIdentity.value );\n");
      out.write("        try {\n");
      out.write("            btnRegister.disabled = true;\n");
      out.write("            if (!txtRealm.value || !txtPrivateIdentity.value || !txtPublicIdentity.value) {\n");
      out.write("                txtRegStatus.innerHTML = '<b>Please fill madatory fields (*)</b>';\n");
      out.write("                btnRegister.disabled = false;\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            var o_impu = tsip_uri.prototype.Parse(txtPublicIdentity.value);\n");
      out.write("            if (!o_impu || !o_impu.s_user_name || !o_impu.s_host) {\n");
      out.write("                txtRegStatus.innerHTML = \"<b>[\" + txtPublicIdentity.value + \"] is not a valid Public identity</b>\";\n");
      out.write("                btnRegister.disabled = false;\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            // enable notifications if not already done\n");
      out.write("            if (window.webkitNotifications && window.webkitNotifications.checkPermission() != 0) {\n");
      out.write("                window.webkitNotifications.requestPermission();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            // save credentials\n");
      out.write("            saveCredentials();\n");
      out.write("            window.localStorage.setItem('com.s.v.bool', \"true\");\n");
      out.write("            // update debug level to be sure new values will be used if the user haven't updated the page\n");
      out.write("            SIPml.setDebugLevel((window.localStorage && window.localStorage.getItem('org.doubango.expert.disable_debug') == \"true\") ? \"error\" : \"info\");\n");
      out.write("\n");
      out.write("            // create SIP stack\n");
      out.write("            oSipStack = new SIPml.Stack({\n");
      out.write("                    realm: txtRealm.value,\n");
      out.write("                    impi: txtPrivateIdentity.value,\n");
      out.write("                    impu: txtPublicIdentity.value,\n");
      out.write("                    password: txtPassword.value,\n");
      out.write("                    display_name: txtDisplayName.value,\n");
      out.write("                    websocket_proxy_url: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.websocket_server_url') : null),\n");
      out.write("                    outbound_proxy_url: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.sip_outboundproxy_url') : null),\n");
      out.write("                    ice_servers: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.ice_servers') : null),\n");
      out.write("                    enable_rtcweb_breaker: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.enable_rtcweb_breaker') == \"true\" : false),\n");
      out.write("                    events_listener: { events: '*', listener: onSipEventStack },\n");
      out.write("                    enable_early_ims: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.disable_early_ims') != \"true\" : true), // Must be true unless you're using a real IMS network\n");
      out.write("                    enable_media_stream_cache: (window.localStorage ? window.localStorage.getItem('org.doubango.expert.enable_media_caching') == \"true\" : false),\n");
      out.write("                    bandwidth: (window.localStorage ? tsk_string_to_object(window.localStorage.getItem('org.doubango.expert.bandwidth')) : null), // could be redefined a session-level\n");
      out.write("                    video_size: (window.localStorage ? tsk_string_to_object(window.localStorage.getItem('org.doubango.expert.video_size')) : null), // could be redefined a session-level\n");
      out.write("                    sip_headers: [\n");
      out.write("                            { name: 'User-Agent', value: 'IM-client/OMA1.0 sipML5-v1.2013.08.10B' },\n");
      out.write("                            { name: 'Organization', value: 'TCS' }\n");
      out.write("                    ]\n");
      out.write("                }\n");
      out.write("            );\n");
      out.write("            if (oSipStack.start() != 0) {\n");
      out.write("                txtRegStatus.innerHTML = '<b>Failed to start the SIP stack</b>';\n");
      out.write("            }\n");
      out.write("            else return;\n");
      out.write("        }\n");
      out.write("        catch (e) {\n");
      out.write("            txtRegStatus.innerHTML = \"<b>2:\" + e + \"</b>\";\n");
      out.write("        }\n");
      out.write("        btnRegister.disabled = false;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // sends SIP REGISTER (expires=0) to logout\n");
      out.write("    function sipUnRegister() {\n");
      out.write("        if (oSipStack) {\n");
      out.write("            oSipStack.stop(); // shutdown all sessions\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function chatValidation(){\n");
      out.write("    \tchatField.innerHTML=\"\";\n");
      out.write("    \t\n");
      out.write("\t\tvar desturi=document.getElementById(\"uri\").value;\n");
      out.write("\t\tdesturi.trim();\n");
      out.write("\t\tif(desturi===\"\"){\n");
      out.write("\t\t\tchatField.innerHTML=\"URI Cant Be Empty\";\n");
      out.write("\t\t\tdesturi.focus;\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write(" }\n");
      out.write("    function msgValidation(){\n");
      out.write("    \tchatField.innerHTML=\"\";\n");
      out.write("    \tvar content=document.getElementById(\"msg\").value;\n");
      out.write("\t\tif(content===\"\"){\n");
      out.write("\t\t\tchatField.innerHTML=\"Msg Box Cant Be Empty\";\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("     function enterpressalert(e){\n");
      out.write("    \t if(e.keyCode===13){\n");
      out.write("    \t\t sipIM(\"message\");\n");
      out.write("    \t }\n");
      out.write("     }\n");
      out.write("    \n");
      out.write("    function sipIM(s_type)\n");
      out.write("\t{\n");
      out.write("\t\t\n");
      out.write("\t oConfigMsg = {\n");
      out.write("            \n");
      out.write("            events_listener: { events: '*', listener: onSipEventSession },\n");
      out.write("            sip_caps: [\n");
      out.write("                            { name: '+g.oma.sip-im' },\n");
      out.write("                            { name: '+sip.ice' },\n");
      out.write("                            { name: 'language', value: '\\\"en,fr\\\"' }\n");
      out.write("                        ]\n");
      out.write("        };\n");
      out.write("\t\tvar uri=document.getElementById(\"uri\").value;\n");
      out.write("\t\t/* var desturi=\"sip:\"+uri+\"@tcs.com\"; */\n");
      out.write("\t\tvar desturi=uri;\n");
      out.write("\t\t\n");
      out.write("\t\t/* alert(\"dest\"+desturi); */\n");
      out.write("\t\tvar content=document.getElementById(\"msg\").value;\n");
      out.write("\t\t\n");
      out.write("\t\tdocument.getElementById(\"msg\").value=\"\";\n");
      out.write("\t\t/* alert(\"content is\"+content); */\n");
      out.write("\t\t\n");
      out.write("\t\t/* document.getElementById(\"textArea\").value +=\"me : \"+ content+\"\\n\" ;\n");
      out.write("\t\tdocument.getElementById(\"textArea\").scrollTop =    document.getElementById(\"textArea\").scrollHeight; */\n");
      out.write("\t\t\n");
      out.write("\t\t//call the javadcript function of jqurey\n");
      out.write("\t\tsendDataToDiv(\"me\",content);\n");
      out.write("\t\tdocument.getElementById(\"sipMsgs\").scrollTop =    document.getElementById(\"sipMsgs\").scrollHeight;\n");
      out.write("\t\t\n");
      out.write("\t\t       /* if (oSipStack && !oSipSessionMessage && !tsk_string_is_null_or_empty(txtPhoneNumber.value)) { */\n");
      out.write("\t\toSipSessionMessage = oSipStack.newSession(s_type,oConfigMsg);\n");
      out.write("\t\t//to send message\n");
      out.write("\t\t/* alert(\"send1\"); */\n");
      out.write("\t\t\n");
      out.write("\t\textraContent=\"[{trxnid}]\";\n");
      out.write("\t\t addInt=extraContent+msgId;\n");
      out.write("\t\t msgId++;\n");
      out.write("\t\t finalMsg=content+addInt;\n");
      out.write("\t\t \n");
      out.write("\t\toSipSessionMessage.send(desturi,finalMsg, 'text/plain;charset=utf8');\n");
      out.write("\t\t/* alert(\"send2\"); \n");
      out.write("\t\t\n");
      out.write("\t\t\t } \n");
      out.write("\t\t\telse \n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t alert(\"inside else\");\n");
      out.write("\t\t\t\toSipSessionMessage.send(desturi, content, 'text/plain;charset=utf8');\n");
      out.write("\n");
      out.write("\t\t\t\t} */\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    \n");
      out.write("  //presence\n");
      out.write("\tfunction sipPublis(s_type) {\n");
      out.write("\t\t\t\t// alert(\"inside publish\");\n");
      out.write("\t\toSipPublish = oSipStack.newSession('publish', {\n");
      out.write("\t\t\texpires : 200,\n");
      out.write("\t\t\tsip_headers : [ {\n");
      out.write("\t\t\t\tname : 'Event',\n");
      out.write("\t\t\t\tvalue : 'presence'\n");
      out.write("\t\t\t} ],\n");
      out.write("\t\t\tsip_caps : [ {\n");
      out.write("\t\t\t\tname : '+g.oma.sip-im'\n");
      out.write("\t\t\t}, {\n");
      out.write("\t\t\t\tname : '+sip.ice'\n");
      out.write("\t\t\t}, {\n");
      out.write("\t\t\t\tname : 'language',\n");
      out.write("\t\t\t\tvalue : '\\\"en,fr\\\"'\n");
      out.write("\t\t\t} ],\n");
      out.write("\t\t\tevents_listener : {\n");
      out.write("\t\t\t\tevents : '*',\n");
      out.write("\t\t\t\tlistener : onSipEventSession\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\tvar contentType = 'application/pidf+xml';\n");
      out.write("\t\tvar content = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n'\n");
      out.write("\t\t\t\t+ '<presence xmlns=\"urn:ietf:params:xml:ns:pidf\">\\n' +\n");
      out.write("\n");
      out.write("\t\t\t\t'<tuple id=\"bob\">\\n' + '<status>\\n' + '<basic>open</basic>\\n'\n");
      out.write("\t\t\t\t+ '<contact>sip:bob@tcs.com</contact>\\n'\n");
      out.write("\t\t\t\t+ '<note>online</note></status>\\n' + '</tuple>\\n'\n");
      out.write("\t\t\t\t+ '</presence>';\n");
      out.write("\t\toSipPublish.publish(content, contentType);\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t//presence ends\n");
      out.write("\tmain();\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t//subscribe\n");
      out.write("\tfunction sipSubscribe() {\n");
      out.write("\n");
      out.write(" for(i=0;i<friendslist.length;i++)\n");
      out.write("\t {\n");
      out.write("\t //alert(\"inside 2345\");\n");
      out.write("\t\toConfigSub = {\n");
      out.write("\t\t\texpires : 200,\n");
      out.write("\t\t\tevents_listener : {\n");
      out.write("\t\t\t\tevents : '*',\n");
      out.write("\t\t\t\tlistener : onSipEventSession\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tsip_headers : [ {\n");
      out.write("\t\t\t\tname : 'Event',\n");
      out.write("\t\t\t\tvalue : 'presence'\n");
      out.write("\t\t\t}, // only notify for 'presence' events\n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\tname : 'Accept',\n");
      out.write("\t\t\t\tvalue : 'application/pidf+xml'\n");
      out.write("\t\t\t} // supported content types (COMMA-sparated)\n");
      out.write("\t\t\t],\n");
      out.write("\t\t\tsip_caps : [ {\n");
      out.write("\t\t\t\tname : '+g.oma.sip-im'\n");
      out.write("\t\t\t}, {\n");
      out.write("\t\t\t\tname : '+sip.ice'\n");
      out.write("\t\t\t}, {\n");
      out.write("\t\t\t\tname : 'language',\n");
      out.write("\t\t\t\tvalue : '\\\"en,fr\\\"'\n");
      out.write("\t\t\t} ]\n");
      out.write("\n");
      out.write("\t\t};\n");
      out.write("\n");
      out.write("\t\tsubscribeSession = oSipStack.newSession(\"subscribe\", oConfigSub);\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\t\t// start watching for entity's presence status (You may track event type 'connected' to be sure that the request has been accepted by the server)\n");
      out.write("\n");
      out.write("\t\t\tto[i]=friendslist[i];\n");
      out.write("\t\t\tsubscribeSession.subscribe(to[i]);\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t//subscribe ends\n");
      out.write("    \n");
      out.write("    // makes a call (SIP INVITE)\n");
      out.write("    function sipCall(s_type) {\n");
      out.write("\t\tarr=new Array(); \n");
      out.write("\t\tarr[arr.length]=document.getElementById(\"txtPublicIdentity\").value;\n");
      out.write("\t\tarr[arr.length]=document.getElementById(\"txtPhoneNumber\").value;\n");
      out.write("\t\tvar startTime=new Date();\n");
      out.write("\t\tarr[arr.length]=startTime.getTime();\n");
      out.write("        if (oSipStack && !oSipSessionCall && !tsk_string_is_null_or_empty(txtPhoneNumber.value)) {\n");
      out.write("            if(s_type == 'call-screenshare') {\n");
      out.write("                if(!SIPml.isScreenShareSupported()) {\n");
      out.write("                \n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("               //changed from https to http \n");
      out.write("                if (!location.protocol.match('http')){\n");
      out.write("                    if (confirm(\"Screen sharing requires https://. Do you want to be redirected?\")) {\n");
      out.write("                        sipUnRegister();\n");
      out.write("                        window.location = 'https://ns313841.ovh.net/call.htm';\n");
      out.write("                    }\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("            }\n");
      out.write("            btnCall.disabled = true;\n");
      out.write("            btnHangUp.disabled = false;\n");
      out.write("\n");
      out.write("            if(window.localStorage) {\n");
      out.write("                oConfigCall.bandwidth = tsk_string_to_object(window.localStorage.getItem('org.doubango.expert.bandwidth')); // already defined at stack-level but redifined to use latest values\n");
      out.write("                oConfigCall.video_size = tsk_string_to_object(window.localStorage.getItem('org.doubango.expert.video_size')); // already defined at stack-level but redifined to use latest values\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            // create call session\n");
      out.write("            oSipSessionCall = oSipStack.newSession(s_type, oConfigCall);\n");
      out.write("            // make call\n");
      out.write("            if (oSipSessionCall.call(txtPhoneNumber.value) != 0) {\n");
      out.write("                oSipSessionCall = null;\n");
      out.write("                txtCallStatus.value = 'Failed to make call';\n");
      out.write("                btnCall.disabled = false;\n");
      out.write("                btnHangUp.disabled = true;\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            saveCallOptions();\n");
      out.write("        }\n");
      out.write("        else if (oSipSessionCall) {\n");
      out.write("            txtCallStatus.innerHTML = '<i>Connecting...</i>';\n");
      out.write("            oSipSessionCall.accept(oConfigCall);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // transfers the call\n");
      out.write("    function sipTransfer() {\n");
      out.write("        if (oSipSessionCall) {\n");
      out.write("            var s_destination = prompt('Enter destination number', '');\n");
      out.write("            if (!tsk_string_is_null_or_empty(s_destination)) {\n");
      out.write("                btnTransfer.disabled = true;\n");
      out.write("                if (oSipSessionCall.transfer(s_destination) != 0) {\n");
      out.write("                    txtCallStatus.innerHTML = '<i>Call transfer failed</i>';\n");
      out.write("                    btnTransfer.disabled = false;\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                txtCallStatus.innerHTML = '<i>Transfering the call...</i>';\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    // holds or resumes the call\n");
      out.write("    function sipToggleHoldResume() {\n");
      out.write("        if (oSipSessionCall) {\n");
      out.write("            var i_ret;\n");
      out.write("            btnHoldResume.disabled = true;\n");
      out.write("            txtCallStatus.innerHTML = oSipSessionCall.bHeld ? '<i>Resuming the call...</i>' : '<i>Holding the call...</i>';\n");
      out.write("            i_ret = oSipSessionCall.bHeld ? oSipSessionCall.resume() : oSipSessionCall.hold();\n");
      out.write("            if (i_ret != 0) {\n");
      out.write("                txtCallStatus.innerHTML = '<i>Hold / Resume failed</i>';\n");
      out.write("                btnHoldResume.disabled = false;\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // terminates the call (SIP BYE or CANCEL)\n");
      out.write("    function sipHangUp() {\n");
      out.write("    \tvar endTime=new Date();\n");
      out.write("    \tarr[arr.length]=endTime.getTime();\n");
      out.write("    \tsendDataToUpload();\n");
      out.write("    \tif (oSipSessionCall) {\n");
      out.write("            txtCallStatus.innerHTML = '<i>Terminating the call...</i>';\n");
      out.write("            oSipSessionCall.hangup({events_listener: { events: '*', listener: onSipEventSession }});\n");
      out.write("         \n");
      out.write("        }\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function sipSendDTMF(c){\n");
      out.write("        if(oSipSessionCall && c){\n");
      out.write("            if(oSipSessionCall.dtmf(c) == 0){\n");
      out.write("                try { dtmfTone.play(); } catch(e){ }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function startRingTone() {\n");
      out.write("        try { ringtone.play(); }\n");
      out.write("        catch (e) { }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function stopRingTone() {\n");
      out.write("        try { ringtone.pause(); }\n");
      out.write("        catch (e) { }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function startRingbackTone() {\n");
      out.write("        try { ringbacktone.play(); }\n");
      out.write("        catch (e) { }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function stopRingbackTone() {\n");
      out.write("        try { ringbacktone.pause(); }\n");
      out.write("        catch (e) { }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function toggleFullScreen() {\n");
      out.write("        if (videoRemote.webkitSupportsFullscreen) {\n");
      out.write("            fullScreen(!videoRemote.webkitDisplayingFullscreen);\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            fullScreen(!bFullScreen);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function openKeyPad(){\n");
      out.write("        divKeyPad.style.visibility = 'visible';\n");
      out.write("        divKeyPad.style.left = ((document.body.clientWidth - C.divKeyPadWidth) >> 1) + 'px';\n");
      out.write("        divKeyPad.style.top = '70px';\n");
      out.write("        divGlassPanel.style.visibility = 'visible';\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function closeKeyPad(){\n");
      out.write("        divKeyPad.style.left = '0px';\n");
      out.write("        divKeyPad.style.top = '0px';\n");
      out.write("        divKeyPad.style.visibility = 'hidden';\n");
      out.write("        divGlassPanel.style.visibility = 'hidden';\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function fullScreen(b_fs) {\n");
      out.write("        bFullScreen = b_fs;\n");
      out.write("        if (tsk_utils_have_webrtc4native() && bFullScreen && videoRemote.webkitSupportsFullscreen) {\n");
      out.write("            if (bFullScreen) {\n");
      out.write("                videoRemote.webkitEnterFullScreen();\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                videoRemote.webkitExitFullscreen();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            if (tsk_utils_have_webrtc4npapi()) {\n");
      out.write("                try { if(window.__o_display_remote) window.__o_display_remote.setFullScreen(b_fs); }\n");
      out.write("                catch (e) { divVideo.setAttribute(\"class\", b_fs ? \"full-screen\" : \"normal-screen\"); }\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                divVideo.setAttribute(\"class\", b_fs ? \"full-screen\" : \"normal-screen\");\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function showNotifICall(s_number) {\n");
      out.write("        // permission already asked when we registered\n");
      out.write("        if (window.webkitNotifications && window.webkitNotifications.checkPermission() == 0) {\n");
      out.write("            if (oNotifICall) {\n");
      out.write("                oNotifICall.cancel();\n");
      out.write("            }\n");
      out.write("            oNotifICall = window.webkitNotifications.createNotification('Call Notification', 'Incoming call from ' + s_number);\n");
      out.write("            oNotifICall.onclose = function () { oNotifICall = null; };\n");
      out.write("            oNotifICall.show();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function onKeyUp(evt) {\n");
      out.write("        evt = (evt || window.event);\n");
      out.write("        if (evt.keyCode == 27) {\n");
      out.write("            fullScreen(false);\n");
      out.write("        }\n");
      out.write("        else if (evt.ctrlKey && evt.shiftKey) { // CTRL + SHIFT\n");
      out.write("            if (evt.keyCode == 65 || evt.keyCode == 86) { // A (65) or V (86)\n");
      out.write("                bDisableVideo = (evt.keyCode == 65);\n");
      out.write("                txtCallStatus.innerHTML = '<i>Video ' + (bDisableVideo ? 'disabled' : 'enabled') + '</i>';\n");
      out.write("                window.localStorage.setItem('org.doubango.expert.disable_video', bDisableVideo);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function onDivCallCtrlMouseMove(evt) {\n");
      out.write("        try { // IE: DOM not ready\n");
      out.write("            if (tsk_utils_have_stream()) {\n");
      out.write("                btnCall.disabled = (!tsk_utils_have_stream() || !oSipSessionRegister || !oSipSessionRegister.is_connected());\n");
      out.write("                document.getElementById(\"divCallCtrl\").onmousemove = null; // unsubscribe\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        catch (e) { }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function uiOnConnectionEvent(b_connected, b_connecting) { // should be enum: connecting, connected, terminating, terminated\n");
      out.write("        btnRegister.disabled = b_connected || b_connecting;\n");
      out.write("        btnUnRegister.disabled = !b_connected && !b_connecting;\n");
      out.write("        btnCall.disabled = !(b_connected && tsk_utils_have_webrtc() && tsk_utils_have_stream());\n");
      out.write("        btnHangUp.disabled = !oSipSessionCall;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function uiVideoDisplayEvent(b_local, b_added) {\n");
      out.write("        var o_elt_video = b_local ? videoLocal : videoRemote;\n");
      out.write("\n");
      out.write("        if (b_added) {\n");
      out.write("            if (SIPml.isWebRtc4AllSupported()) {\n");
      out.write("                if (b_local){ if(window.__o_display_local) window.__o_display_local.style.visibility = \"visible\"; }\n");
      out.write("                else { if(window.__o_display_remote) window.__o_display_remote.style.visibility = \"visible\"; }\n");
      out.write("                   \n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                o_elt_video.style.opacity = 1;\n");
      out.write("            }\n");
      out.write("            uiVideoDisplayShowHide(true);\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            if (SIPml.isWebRtc4AllSupported()) {\n");
      out.write("                if (b_local){ if(window.__o_display_local) window.__o_display_local.style.visibility = \"hidden\"; }\n");
      out.write("                else { if(window.__o_display_remote) window.__o_display_remote.style.visibility = \"hidden\"; }\n");
      out.write("            }\n");
      out.write("            else{\n");
      out.write("                o_elt_video.style.opacity = 0;\n");
      out.write("            }\n");
      out.write("            fullScreen(false);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function uiVideoDisplayShowHide(b_show) {\n");
      out.write("        if (b_show) {\n");
      out.write("            tdVideo.style.height = '340px';\n");
      out.write("            divVideo.style.height = navigator.appName == 'Microsoft Internet Explorer' ? '100%' : '340px';\n");
      out.write("        }\n");
      out.write("        else {\n");
      out.write("            tdVideo.style.height = '0px';\n");
      out.write("            divVideo.style.height = '0px';\n");
      out.write("        }\n");
      out.write("        btnFullScreen.disabled = !b_show;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function uiDisableCallOptions() {\n");
      out.write("        if(window.localStorage) {\n");
      out.write("            window.localStorage.setItem('org.doubango.expert.disable_callbtn_options', 'true');\n");
      out.write("            uiBtnCallSetText('Call');\n");
      out.write("            alert('Use expert view to enable the options again (/!\\\\requires re-loading the page)');\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function uiBtnCallSetText(s_text) {\n");
      out.write("        switch(s_text) {\n");
      out.write("            case \"Call\":\n");
      out.write("                {\n");
      out.write("                    var bDisableCallBtnOptions = (window.localStorage && window.localStorage.getItem('org.doubango.expert.disable_callbtn_options') == \"true\");\n");
      out.write("                    btnCall.value = btnCall.innerHTML = bDisableCallBtnOptions ? 'Call' : 'Call <span id=\"spanCaret\" class=\"caret\">';\n");
      out.write("                    btnCall.setAttribute(\"class\", bDisableCallBtnOptions ? \"btn btn-primary\" : \"btn btn-primary dropdown-toggle\");\n");
      out.write("                    btnCall.onclick = bDisableCallBtnOptions ? function(){ sipCall(bDisableVideo ? 'call-audio' : 'call-audiovideo'); } : null;\n");
      out.write("                    ulCallOptions.style.visibility = bDisableCallBtnOptions ? \"hidden\" : \"visible\";\n");
      out.write("                    if(!bDisableCallBtnOptions && ulCallOptions.parentNode != divBtnCallGroup){\n");
      out.write("                        divBtnCallGroup.appendChild(ulCallOptions);\n");
      out.write("                    }\n");
      out.write("                    else if(bDisableCallBtnOptions && ulCallOptions.parentNode == divBtnCallGroup) {\n");
      out.write("                        document.body.appendChild(ulCallOptions);\n");
      out.write("                    }\n");
      out.write("                    \n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            default:\n");
      out.write("                {\n");
      out.write("                    btnCall.value = btnCall.innerHTML = s_text;\n");
      out.write("                    btnCall.setAttribute(\"class\", \"btn btn-primary\");\n");
      out.write("                    btnCall.onclick = function(){ sipCall(bDisableVideo ? 'call-audio' : 'call-audiovideo'); };\n");
      out.write("                    ulCallOptions.style.visibility = \"hidden\";\n");
      out.write("                    if(ulCallOptions.parentNode == divBtnCallGroup){\n");
      out.write("                        document.body.appendChild(ulCallOptions);\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function uiCallTerminated(s_description){\n");
      out.write("    \t\n");
      out.write("        uiBtnCallSetText(\"Call\");\n");
      out.write("        btnHangUp.value = 'HangUp';\n");
      out.write("        btnHoldResume.value = 'hold';\n");
      out.write("        btnCall.disabled = false;\n");
      out.write("        btnHangUp.disabled = true;\n");
      out.write("        oSipSessionCall = null;\n");
      out.write("        stopRingbackTone();\n");
      out.write("        stopRingTone();\n");
      out.write("        txtCallStatus.innerHTML = \"<i>\" + s_description + \"</i>\";\n");
      out.write("        uiVideoDisplayShowHide(false);\n");
      out.write("        divCallOptions.style.opacity = 0;\n");
      out.write("\n");
      out.write("        if (oNotifICall) {\n");
      out.write("            oNotifICall.cancel();\n");
      out.write("            oNotifICall = null;\n");
      out.write("        }\n");
      out.write("        uiVideoDisplayEvent(true, false);\n");
      out.write("        uiVideoDisplayEvent(false, false);\n");
      out.write("        setTimeout(function () { if (!oSipSessionCall) txtCallStatus.innerHTML = ''; }, 2500);\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function sendDataToUpload() //This function makes use of AJAX To Call the Servlet\n");
      out.write("    {\n");
      out.write("    \t//alert(\"http://localhost:8080/WebRTCCallLogs/SipCallLogServlet?caller=\"+arr[0]+\"&callee=\"+arr[1]+\"&startTime=\"+arr[2]+\"&endTime=\"+arr[3]);\n");
      out.write("    \txmlHttpRequest.open(\"POST\", \"http://\"+ip+\":8080/EnhancedWebRTCCallLogs/SipCallLogServlet?caller=\"+arr[0]+\"&callee=\"+arr[1]+\"&startTime=\"+arr[2]+\"&endTime=\"+arr[3], true);\n");
      out.write("    \txmlHttpRequest.onreadystatechange=receiveMessageFromServer;\n");
      out.write("    \txmlHttpRequest.send();\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function receiveMessageFromServer()\n");
      out.write("    {\n");
      out.write("    \tif(xmlHttpRequest.readyState==4&&xmlHttpRequest.status==200)\n");
      out.write("    \t\t{\n");
      out.write("    \t//\talert(xmlHttpRequest.responseText);\n");
      out.write("    \t\t/* document.getElementById(\"serverReply\").innerHTML=xmlHttpRequest.responseText;\n");
      out.write("    \t\tdocument.getElementById(\"HangUp\").disabled=true;\n");
      out.write("    \t\tdocument.getElementById(\"CALL\").disabled=false; */\n");
      out.write("    \t\t}\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    //send data\n");
      out.write("    \n");
      out.write("if(window.XMLHttpRequest)\n");
      out.write("\t{\n");
      out.write("\txmlHttpRequest=new XMLHttpRequest();\n");
      out.write("\t}\n");
      out.write("else if(window.ActiveXObject)\n");
      out.write("\t{\n");
      out.write("\txmlHttpRequest=new ActiveXObject(MICROSOFT.XMLHTTP);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\n");
      out.write("function eraseResponseMessage()\n");
      out.write("{\n");
      out.write("\tdocument.getElementById(\"serverReply\").innerHTML=\"\";\n");
      out.write("}\n");
      out.write("function receiveMessageFromServer()\n");
      out.write("{\n");
      out.write("\tif(xmlHttpRequest.readyState==4&&xmlHttpRequest.status==200)\n");
      out.write("\t\t{\n");
      out.write("\t\tdocument.getElementById(\"serverReply\").innerHTML=xmlHttpRequest.responseText;\n");
      out.write("\t\t}\n");
      out.write("}\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    //send data end\n");
      out.write("\n");
      out.write("    // Callback function for SIP Stacks\n");
      out.write("    function onSipEventStack(e /*SIPml.Stack.Event*/) {\n");
      out.write("        tsk_utils_log_info('==stack event = ' + e.type);\n");
      out.write("        switch (e.type) {\n");
      out.write("            case 'started':\n");
      out.write("                {\n");
      out.write("                    // catch exception for IE (DOM not ready)\n");
      out.write("                    try {\n");
      out.write("                        // LogIn (REGISTER) as soon as the stack finish starting\n");
      out.write("                        oSipSessionRegister = this.newSession('register', {\n");
      out.write("                            expires: 200,\n");
      out.write("                            events_listener: { events: '*', listener: onSipEventSession },\n");
      out.write("                            sip_caps: [\n");
      out.write("                                        { name: '+g.oma.sip-im', value: null },\n");
      out.write("                                        { name: '+audio', value: null },\n");
      out.write("                                        { name: 'language', value: '\\\"en,fr\\\"' }\n");
      out.write("                                ]\n");
      out.write("                        });\n");
      out.write("                        oSipSessionRegister.register();\n");
      out.write("                    }\n");
      out.write("                    catch (e) {\n");
      out.write("                        txtRegStatus.value = txtRegStatus.innerHTML = \"<b>1:\" + e + \"</b>\";\n");
      out.write("                        btnRegister.disabled = false;\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'stopping': case 'stopped': case 'failed_to_start': case 'failed_to_stop':\n");
      out.write("                {\n");
      out.write("                    var bFailure = (e.type == 'failed_to_start') || (e.type == 'failed_to_stop');\n");
      out.write("                    oSipStack = null;\n");
      out.write("                    oSipSessionRegister = null;\n");
      out.write("                    oSipSessionCall = null;\n");
      out.write("\n");
      out.write("                    uiOnConnectionEvent(false, false);\n");
      out.write("\n");
      out.write("                    stopRingbackTone();\n");
      out.write("                    stopRingTone();\n");
      out.write("\n");
      out.write("                    uiVideoDisplayShowHide(false);\n");
      out.write("                    divCallOptions.style.opacity = 0;\n");
      out.write("\n");
      out.write("                    txtCallStatus.innerHTML = '';\n");
      out.write("                    txtRegStatus.innerHTML = bFailure ? \"<i>Disconnected: <b>\" + e.description + \"</b></i>\" : \"<i>Disconnected</i>\";\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("            case 'i_new_message':\n");
      out.write("\t\t\t{\n");
      out.write("            \tif(oSipSessionMessage){\n");
      out.write("            \t\t/*alert(\"session established\");*/\n");
      out.write("            \t\toSipSessionMessage=e.newSession;\n");
      out.write("            \t\t\n");
      out.write("            \t\t\toSipSessionMessage.accept();\n");
      out.write("            \t\t\tvar si=oSipSessionMessage.getRemoteUri();\n");
      out.write("            \t\t\t/*alert(\"remote uri is\"+si);*/\n");
      out.write("    \t\t\t\t\toSipSessionMessage.setConfiguration(oConfigMsg);\n");
      out.write("    \t\t\t\t\tvar str = oSipSessionMessage.getRemoteFriendlyName();\n");
      out.write("    \t\t\t\t\t/*alert(\"new user is\"+str);*/\n");
      out.write("    \t\t\t\t\tvar i=0;\n");
      out.write("\n");
      out.write("    \t\t\t\t\t /* var sRemoteUri=str.slice(1,25); */\n");
      out.write("    \t\t\t\t\t var firstString=str.replace(\"<\",\"\");\n");
      out.write("    \t\t\t\t\t var sRemoteUri=firstString.replace(\">\",\"\");\n");
      out.write("    \t\t\t\t\t \n");
      out.write("    \t\t\t\t\t\n");
      out.write("    \t\t\t\t\t var doc=e.getContentString();\n");
      out.write("    \t\t\t\t/*changes*/\n");
      out.write("    \t\t\t\t\tmainCont=doc.split(\"[\");\n");
      out.write("    \t\t\t\t\t var string2=str+doc;\n");
      out.write("    \t\t\t\t\t/* alert(\"www\"+string2);\n");
      out.write("    \t\t\t\t\t alert(\"uri is\"+chkURI);*/\n");
      out.write("    \t\t\t\t\t for(k=0;k<chkURI.length;k++){\n");
      out.write("    \t\t\t\t\t\t/* alert(\"inside new array\");*/\n");
      out.write("    \t\t\t\t\t\t if(chkURI[k]===string2){\n");
      out.write("    \t\t\t\t\t\t\t// alert(\"duplicate\");\n");
      out.write("    \t\t\t\t\t\t\t return;\n");
      out.write("    \t\t\t\t\t\t }\n");
      out.write("    \t\t\t\t\t }\n");
      out.write("    \t\t\t\t\t/* for(i=0;i<10;i++){\n");
      out.write("    \t\t\t\t\t\t\n");
      out.write("    \t\t\t\t\t\t\t alert(\"inside if\");\n");
      out.write("    \t\t\t\t\t\t\t if(chkURI[i]===string2){\n");
      out.write("    \t\t\t\t\t\t\t alert(\"duplicate\");\n");
      out.write("    \t\t\t\t\t\t\t return;\n");
      out.write("    \t\t\t\t\t\t }\n");
      out.write("    \t\t\t\t\t }*/\n");
      out.write("    \t\t\t\t\t\t\n");
      out.write("    \t\t\t\t\t\t\t\t /*alert(\"inside else\");*/\n");
      out.write("    \t\t\t\t\t\t\t\t if(chkURI.length<10){\n");
      out.write("    \t\t\t\t\t\t\t\t\t //added\n");
      out.write("    \t\t\t\t\t\t\t\t\t\n");
      out.write("    \t\t\t\t\t\t\t\t chkURI.push(string2);\n");
      out.write("    \t\t\t\t\t\t\t\t var b=\"sip:\";\n");
      out.write("    \t\t    \t\t\t\t\t\t var c =b.concat(sRemoteUri);\n");
      out.write("    \t\t\t\t\t\t\t\t var a=\"@\";\n");
      out.write("    \t\t\t\t\t\t\t\t var d=a.concat(document.getElementById(\"txtRealm\"));\n");
      out.write("    \t\t    \t\t\t\t\t\t");
      out.write("\n");
      out.write("    \t\t    \t\t\t\t\t\t/*  var d=\"@tcs.com\"; */\n");
      out.write("    \t\t    \t\t\t\t\t\t var f=c.concat(d);\n");
      out.write("    \t\t    \t\t\t\t\t\t   \t                       \n");
      out.write("    \t\t    \t\t\t\t\t\t\t/*document.getElementById(\"msg\").value=doc;*/\n");
      out.write("    \t\t    \t\t\t\t\t\t\t /*document.getElementById(\"textArea\").value += str+\" : \"+mainCont[0]+ \"\\n\" ;\n");
      out.write("    \t\t    \t\t\t\t\t\t\tdocument.getElementById(\"textArea\").scrollTop =    document.getElementById(\"textArea\").scrollHeight;*/\n");
      out.write("    \t\t    \t\t\t\t\t\t\t\n");
      out.write("    \t\t    \t\t\t\t\t\t\t//Code to call jqurey function here \n");
      out.write("    \t\t    \t\t\t\t\t\t\tsendDataToDiv(str,mainCont[0]);\n");
      out.write("    \t\t    \t\t\t\t\t\t\tdocument.getElementById(\"sipMsgs\").scrollTop =    document.getElementById(\"sipMsgs\").scrollHeight;\n");
      out.write("    \t\t                            document.getElementById(\"uri\").value =str;\n");
      out.write("    \t\t\t\t\t\t\t\t }\n");
      out.write("    \t\t\t\t\t\t\t\t else\n");
      out.write("    \t\t\t\t\t\t\t\t\t {\n");
      out.write("    \t\t\t\t\t\t\t\t\t /*alert(\"inside splice\");*/\n");
      out.write("    \t\t\t\t\t\t\t\t\t chkURI.splice(0,1);\n");
      out.write("    \t\t\t\t\t\t\t\t\n");
      out.write("    \t\t\t\t\t\t\t\t\t chkURI.push(string2);\n");
      out.write("        \t\t\t\t\t\t\t\t var b=\"sip:\";\n");
      out.write("        \t\t    \t\t\t\t\t\t var c =b.concat(sRemoteUri);\n");
      out.write("        \t\t\t\t\t\t\t\t var a=\"@\";\n");
      out.write("        \t\t\t\t\t\t\t\t var d=a.concat(document.getElementById(\"txtRealm\"));\n");
      out.write("        \t\t    \t\t\t\t\t\t");
      out.write("\n");
      out.write("        \t\t    \t\t\t\t\t\t/*  var d=\"@tcs.com\"; */\n");
      out.write("        \t\t    \t\t\t\t\t\t var f=c.concat(d);\n");
      out.write("        \t\t    \t\t\t\t\t\t   \t                       \n");
      out.write("        \t\t    \t\t\t\t\t\t\n");
      out.write("        \t\t    \t\t\t\t\t\t\tsendDataToDiv(str,mainCont[0]);\n");
      out.write("        \t\t    \t\t\t\t\t\t\tdocument.getElementById(\"sipMsgs\").scrollTop =    document.getElementById(\"sipMsgs\").scrollHeight;\n");
      out.write("        \t\t    \t\t\t\t\t\t\t\n");
      out.write("        \t\t                            document.getElementById(\"uri\").value =str;\n");
      out.write("    \t\t\t\t\t\t\t\t\t }\n");
      out.write("    \t\t\t\t\t \n");
      out.write("    \t\t\t\t\t \n");
      out.write("    \t\t\t\t}\n");
      out.write("            \t\telse{\n");
      out.write("            \t\t\n");
      out.write("            \t\t\n");
      out.write("\t\t\t\t\t\toSipSessionMessage=e.newSession;\n");
      out.write("\t\t\t\t\t\toSipSessionMessage.accept();\n");
      out.write("\t\t\t\t\toSipSessionMessage.setConfiguration(oConfigMsg);\n");
      out.write("\t\t\t\t\t var str = (oSipSessionMessage.getRemoteFriendlyName() || 'unknown');\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t var firstString=str.replace(\"<\",\"\");\n");
      out.write("\t\t\t\t\t var sRemoteUri=firstString.replace(\">\",\"\");\n");
      out.write("\t\t\t\t\t var doc=e.getContentString();\n");
      out.write("\t\t\t\t\t var fstring=str+doc;\n");
      out.write("\t\t\t\t\t chkURI.push(fstring);\n");
      out.write("\t\t\t\t\t var cont=doc.split(\"[\");\n");
      out.write("\t\t\t\t\t//alert(\"trxn cont is\"+cont[0]);\n");
      out.write("\t\t\t\t\t /* chkMSG.push(doc); */\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t var b=\"sip:\";\n");
      out.write("\t\t\t\t\t\t var c =b.concat(sRemoteUri);\n");
      out.write("\t\t\t\t\t\t var a=\"@\";\n");
      out.write("\t\t\t\t\t\t var d=a.concat(document.getElementById(\"txtRealm\"));\n");
      out.write("\t\t\t\t\t\t \n");
      out.write("\t\t\t\t\t\t /* var d=\"@tcs.com\"; */\n");
      out.write("\t\t\t\t\t\t var f=c.concat(d);\n");
      out.write("\t\t\t\t\t\t\t/*document.getElementById(\"msg\").value=doc;*/\n");
      out.write("\t\t\t\t\t\t\t//code for jqurey\n");
      out.write("\t\t\t\t\t\t\tsendDataToDiv(str,cont[0]);\n");
      out.write("\t\t\t\t\t\t\tdocument.getElementById(\"sipMsgs\").scrollTop =    document.getElementById(\"sipMsgs\").scrollHeight;\n");
      out.write("\t\t\t\t\t\t\t/* document.getElementById(\"textArea\").value += str+\" : \"+cont[0]+ \"\\n\" ; */\n");
      out.write("                        document.getElementById(\"uri\").value =str;\n");
      out.write("\t\t\t\t\t\t/*document.getElementById(\"msg\").value=doc;*/\t\n");
      out.write("\t\t\t  }\n");
      out.write("            \t\tbreak;\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("            case 'i_new_call':\n");
      out.write("                {\n");
      out.write("                    if (oSipSessionCall) {\n");
      out.write("                        // do not accept the incoming call if we're already 'in call'\n");
      out.write("                       // e.newSession.hangup(); // comment this line for multi-line support\n");
      out.write("                    }\n");
      out.write("                    else {\n");
      out.write("                        oSipSessionCall = e.newSession;\n");
      out.write("                        // start listening for events\n");
      out.write("                        oSipSessionCall.setConfiguration(oConfigCall);\n");
      out.write("\n");
      out.write("                        uiBtnCallSetText('Answer');\n");
      out.write("                        btnHangUp.value = 'Reject';\n");
      out.write("                        btnCall.disabled = false;\n");
      out.write("                        btnHangUp.disabled = false;\n");
      out.write("\n");
      out.write("                        startRingTone();\n");
      out.write("\n");
      out.write("                        var sRemoteNumber = (oSipSessionCall.getRemoteFriendlyName() || 'unknown');\n");
      out.write("                        txtCallStatus.innerHTML = \"<i>Incoming call from [<b>\" + sRemoteNumber + \"</b>]</i>\";\n");
      out.write("                        showNotifICall(sRemoteNumber);\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            case 'm_permission_requested':\n");
      out.write("                {\n");
      out.write("                    divGlassPanel.style.visibility = 'visible';\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_permission_accepted':\n");
      out.write("            case 'm_permission_refused':\n");
      out.write("                {\n");
      out.write("                    divGlassPanel.style.visibility = 'hidden';\n");
      out.write("                    if(e.type == 'm_permission_refused'){\n");
      out.write("                        uiCallTerminated('Media stream permission denied');\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            case 'starting': default: break;\n");
      out.write("        }\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    function dummyUnregister(){\n");
      out.write("    \t  window.localStorage.setItem('com.s.v.bool', \"false\");\n");
      out.write("    \t  sipUnRegister();\n");
      out.write("    }\n");
      out.write("      function dummyRegister(){\n");
      out.write("      \tif (window.localStorage.getItem('com.s.v.bool')==\"true\")\n");
      out.write("      \t\t\n");
      out.write("      \t{\n");
      out.write("      \t\tsetTimeout(function(){sipRegister();},700);\n");
      out.write("      \t\t\n");
      out.write("      \t}\n");
      out.write("      \t\n");
      out.write("      }\n");
      out.write("\n");
      out.write("\n");
      out.write("    \n");
      out.write("    // Callback function for SIP sessions (INVITE, REGISTER, MESSAGE...)\n");
      out.write("    function onSipEventSession(e /* SIPml.Session.Event */) {\n");
      out.write("        tsk_utils_log_info('==session event = ' + e.type);\n");
      out.write("\n");
      out.write("        switch (e.type) {\n");
      out.write("            case 'connecting': case 'connected':\n");
      out.write("                {\n");
      out.write("                    var bConnected = (e.type == 'connected');\n");
      out.write("                    \n");
      out.write("                    if (e.session == oSipSessionRegister) {\n");
      out.write("                        uiOnConnectionEvent(bConnected, !bConnected);\n");
      out.write("                        txtRegStatus.innerHTML = \"<i>\" + e.description + \"</i>\";\n");
      out.write("                    }\n");
      out.write("                    \n");
      out.write("                    else if (e.session == oSipSessionCall) {\n");
      out.write("                        btnHangUp.value = 'HangUp';\n");
      out.write("                        btnCall.disabled = true;\n");
      out.write("                        btnHangUp.disabled = false;\n");
      out.write("                        btnTransfer.disabled = false;\n");
      out.write("\n");
      out.write("                        if (bConnected) {\n");
      out.write("                            stopRingbackTone();\n");
      out.write("                            stopRingTone();\n");
      out.write("\n");
      out.write("                            if (oNotifICall) {\n");
      out.write("                                oNotifICall.cancel();\n");
      out.write("                                oNotifICall = null;\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                        txtCallStatus.innerHTML = \"<i>\" + e.description + \"</i>\";\n");
      out.write("                        divCallOptions.style.opacity = bConnected ? 1 : 0;\n");
      out.write("\n");
      out.write("                        if (SIPml.isWebRtc4AllSupported()) { // IE don't provide stream callback\n");
      out.write("                            uiVideoDisplayEvent(true, true);\n");
      out.write("                            uiVideoDisplayEvent(false, true);\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                } // 'connecting' | 'connected'\n");
      out.write("            case 'terminating': case 'terminated':\n");
      out.write("                {\n");
      out.write("                    if (e.session == oSipSessionRegister) {\n");
      out.write("                        uiOnConnectionEvent(false, false);\n");
      out.write("\n");
      out.write("                        oSipSessionCall = null;\n");
      out.write("                        oSipSessionRegister = null;\n");
      out.write("\n");
      out.write("                        txtRegStatus.innerHTML = \"<i>\" + e.description + \"</i>\";\n");
      out.write("                    }\n");
      out.write("                    else if (e.session == oSipSessionCall) {\n");
      out.write("                        uiCallTerminated(e.description);\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                } // 'terminating' | 'terminated'\n");
      out.write("\n");
      out.write("            case 'i_notify': {\n");
      out.write("\t\t\t\t// alert(\"inside notify\"+e.getContentString());\n");
      out.write("\tconsole.info('NOTIFY content = ' + e.getContentString());\n");
      out.write("\tconsole.info('NOTIFY content-type = ' + e.getContentType());\n");
      out.write("\t\n");
      out.write("\tif (e.getContentType() == 'application/pidf+xml') {\n");
      out.write("\t\t// alert(\"inside notifywww\"); \n");
      out.write("\t\tif (window.DOMParser) {\n");
      out.write("\t\t\tvar parser = new DOMParser();\n");
      out.write("\t\t\tvar xmlDoc = parser ? parser.parseFromString(e\n");
      out.write("\t\t\t\t\t.getContentString(), \"text/xml\") : null;\n");
      out.write("\n");
      out.write("\t\t\tvar presenceNode = xmlDoc ? xmlDoc\n");
      out.write("\t\t\t\t\t.getElementsByTagName(\"presence\")[0] : null;\n");
      out.write("\t\t\t\t\t/* alert(\"inside presence\"+presenceNode); */\n");
      out.write("\t\t\tif (presenceNode) {\n");
      out.write("\t\t\t\tvar entityUri = presenceNode.getAttribute(\"entity\");\n");
      out.write("\n");
      out.write("\t\t\t\t/* alert(\"entity uri is\" + entityUri); */\n");
      out.write("\t\t\t\tvar tupleNode = presenceNode\n");
      out.write("\t\t\t\t\t\t.getElementsByTagName(\"tuple\")[0];\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\tvar statusNode = tupleNode\n");
      out.write("\t\t\t\t\t\t.getElementsByTagName(\"status\")[0];\n");
      out.write("\n");
      out.write("\t\t\t\tif (tupleNode) {\n");
      out.write("\t\t\t\t\tvar statusNode = tupleNode\n");
      out.write("\t\t\t\t\t\t\t.getElementsByTagName(\"status\")[0];\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\tvar noteNode = tupleNode\n");
      out.write("\t\t\t\t\t\t\t.getElementsByTagName(\"note\")[0];\n");
      out.write("\n");
      out.write("\t\t\t\t\t      var check = noteNode.textContent;\n");
      out.write("\t\t\t\t\t     // alert(\"check is\"+check);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t    // check ip of currenty serer from file \n");
      out.write("\t\t\t\t\t\t \t//var pathOfFileToRead = \"/home/altanai/altanaiwkspace/presentation_server_config.txt\";\n");
      out.write("\t\t\t\t\t\t    \n");
      out.write("\t\t\t\t\t\t\t//alert (\" server ip\" + serverip );\n");
      out.write("\t\t\t\t\t\t //-----------\n");
      out.write("\t\t\t\t\t//alert(\"check is\"+check);\n");
      out.write("\t\t\t\t\tif (check ===\"\") {\n");
      out.write("\n");
      out.write("\t\t\t\t\t\tvar i=0;\n");
      out.write("\t\t\t\t\t\t\tinfoArray[i]=new Array();\n");
      out.write("\t\t\t\t\t\t\tinfoArray[i][0]=entityUri;\n");
      out.write("\t\t\t\t\t\t\tinfoArray[i][1]=\"offline\";\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t// alert(\"value of users is\"+infoArray[i][0]);\n");
      out.write("\t\t\t\t\t\t\t//alert(\"value of status\"+infoArray[i][1]); \n");
      out.write("\t\t\t\t\t\t\t//alert(\"server ip \"+ipcontentsOfFileAsString);\n");
      out.write("\t\t\t\t\t\t\txmlHttpRequest.open(\"POST\", \"http://\"+ip+\":8080/WebRTC_presentation/PresenceServlet?friend1=\"+infoArray[i][0]+\"&friend1status=\"+infoArray[i][1], true);\n");
      out.write("\t\t\t\t\t\t\txmlHttpRequest.onreadystatechange=receiveMessageFromServer;\n");
      out.write("\t\t\t\t\t\t\txmlHttpRequest.send();\n");
      out.write("\t\t\t\t\t\t\ti++;\n");
      out.write("\n");
      out.write("\t\t\t\t\t} \n");
      out.write("\t\t\t\t\telse {\n");
      out.write("\t\t\t\t\t\t//alert(\"inside online\"); \n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tinfoArray=new Array(20);\n");
      out.write("\t\t\t\t\t\tfor(i=0;i<infoArray.length;i++)\n");
      out.write("\t\t\t\t\t\t\t{\n");
      out.write("\t\t\t\t\t\t\tinfoArray[i]=new Array(20);\n");
      out.write("\t\t\t\t\t\t\tinfoArray[i][0]=entityUri;\n");
      out.write("\t\t\t\t\t\t\tinfoArray[i][1]=\"online\";\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\txmlHttpRequest.open(\"POST\", \"http://\"+ip+\":8080/WebRTC_presentation/PresenceServlet?friend1=\"+infoArray[i][0]+\"&friend1status=\"+infoArray[i][1], true);\n");
      out.write("\t\t\t\t\t\t\txmlHttpRequest.onreadystatechange=receiveMessageFromServer;\n");
      out.write("\t\t\t\t\t\t\txmlHttpRequest.send();\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t// alert(\"status is\"+infoArray[0][1]);\n");
      out.write("\t\t\t\t\t\t//alert(\"entity is\"+infoArray[0][1]); \n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tif (statusNode) {\n");
      out.write("\t\t\t\t\t\tvar basicNode = statusNode\n");
      out.write("\t\t\t\t\t\t\t\t.getElementsByTagName(\"basic\")[0];\n");
      out.write("\n");
      out.write("\t\t\t\t\t\tif (basicNode) {\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\tconsole\n");
      out.write("\t\t\t\t\t\t\t\t\t.info('Presence notification: Uri = '\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ entityUri\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ ' status = '\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ basicNode.textContent);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\tbreak;\n");
      out.write("}\n");
      out.write("  \n");
      out.write("            case 'm_stream_video_local_added':\n");
      out.write("                {\n");
      out.write("                    if (e.session == oSipSessionCall) {\n");
      out.write("                        uiVideoDisplayEvent(true, true);\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_stream_video_local_removed':\n");
      out.write("                {\n");
      out.write("                    if (e.session == oSipSessionCall) {\n");
      out.write("                        uiVideoDisplayEvent(true, false);\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_stream_video_remote_added':\n");
      out.write("                {\n");
      out.write("                    if (e.session == oSipSessionCall) {\n");
      out.write("                        uiVideoDisplayEvent(false, true);\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_stream_video_remote_removed':\n");
      out.write("                {\n");
      out.write("                    if (e.session == oSipSessionCall) {\n");
      out.write("                        uiVideoDisplayEvent(false, false);\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            case 'm_stream_audio_local_added':\n");
      out.write("            case 'm_stream_audio_local_removed':\n");
      out.write("            case 'm_stream_audio_remote_added':\n");
      out.write("            case 'm_stream_audio_remote_removed':\n");
      out.write("                {\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            case 'i_ect_new_call':\n");
      out.write("                {\n");
      out.write("                    oSipSessionTransferCall = e.session;\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            case 'i_ao_request':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        var iSipResponseCode = e.getSipResponseCode();\n");
      out.write("                        if (iSipResponseCode == 180 || iSipResponseCode == 183) {\n");
      out.write("                            startRingbackTone();\n");
      out.write("                            txtCallStatus.innerHTML = '<i>Remote ringing...</i>';\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            case 'm_early_media':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        stopRingbackTone();\n");
      out.write("                        stopRingTone();\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Early media started</i>';\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            case 'm_local_hold_ok':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        if (oSipSessionCall.bTransfering) {\n");
      out.write("                            oSipSessionCall.bTransfering = false;\n");
      out.write("                            // this.AVSession.TransferCall(this.transferUri);\n");
      out.write("                        }\n");
      out.write("                        btnHoldResume.value = 'Resume';\n");
      out.write("                        btnHoldResume.disabled = false;\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Call placed on hold</i>';\n");
      out.write("                        oSipSessionCall.bHeld = true;\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_local_hold_nok':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        oSipSessionCall.bTransfering = false;\n");
      out.write("                        btnHoldResume.value = 'Hold';\n");
      out.write("                        btnHoldResume.disabled = false;\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Failed to place remote party on hold</i>';\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_local_resume_ok':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        oSipSessionCall.bTransfering = false;\n");
      out.write("                        btnHoldResume.value = 'Hold';\n");
      out.write("                        btnHoldResume.disabled = false;\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Call taken off hold</i>';\n");
      out.write("                        oSipSessionCall.bHeld = false;\n");
      out.write("\n");
      out.write("                        if (SIPml.isWebRtc4AllSupported()) { // IE don't provide stream callback yet\n");
      out.write("                            uiVideoDisplayEvent(true, true);\n");
      out.write("                            uiVideoDisplayEvent(false, true);\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_local_resume_nok':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        oSipSessionCall.bTransfering = false;\n");
      out.write("                        btnHoldResume.disabled = false;\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Failed to unhold call</i>';\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_remote_hold':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Placed on hold by remote party</i>';\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'm_remote_resume':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Taken off hold by remote party</i>';\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            case 'o_ect_trying':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Call transfer in progress...</i>';\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'o_ect_accepted':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Call transfer accepted</i>';\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'o_ect_completed':\n");
      out.write("            case 'i_ect_completed':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Call transfer completed</i>';\n");
      out.write("                        btnTransfer.disabled = false;\n");
      out.write("                        if (oSipSessionTransferCall) {\n");
      out.write("                            oSipSessionCall = oSipSessionTransferCall;\n");
      out.write("                        }\n");
      out.write("                        oSipSessionTransferCall = null;\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'o_ect_failed':\n");
      out.write("            case 'i_ect_failed':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        txtCallStatus.innerHTML = '<i>Call transfer failed</i>';\n");
      out.write("                        btnTransfer.disabled = false;\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'o_ect_notify':\n");
      out.write("            case 'i_ect_notify':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){\n");
      out.write("                        txtCallStatus.innerHTML = \"<i>Call Transfer: <b>\" + e.getSipResponseCode() + \" \" + e.description + \"</b></i>\";\n");
      out.write("                        if (e.getSipResponseCode() >= 300) {\n");
      out.write("                            if (oSipSessionCall.bHeld) {\n");
      out.write("                                oSipSessionCall.resume();\n");
      out.write("                            }\n");
      out.write("                            btnTransfer.disabled = false;\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("            case 'i_ect_requested':\n");
      out.write("                {\n");
      out.write("                    if(e.session == oSipSessionCall){                        \n");
      out.write("                        var s_message = \"Do you accept call transfer to [\" + e.getTransferDestinationFriendlyName() + \"]?\";//FIXME\n");
      out.write("                        if (confirm(s_message)) {\n");
      out.write("                            txtCallStatus.innerHTML = \"<i>Call transfer in progress...</i>\";\n");
      out.write("                            oSipSessionCall.acceptTransfer();\n");
      out.write("                            break;\n");
      out.write("                        }\n");
      out.write("                        oSipSessionCall.rejectTransfer();\n");
      out.write("                    }\n");
      out.write("                    break;\n");
      out.write("                }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("<body style=\"cursor:wait\" >\n");
      out.write("    <div class=\"navbar navbar-fixed-top\" >\n");
      out.write("        <div id=\"divNavbarInner\" class=\"navbar-inner\">\n");
      out.write("            <div class=\"container\">\n");
      out.write("<!--                 <a class=\"btn btn-navbar\" data-toggle=\"collapse\" data-target=\".nav-collapse\"><span\n");
      out.write("                    class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span>\n");
      out.write("                </a> -->\n");
      out.write("                \n");
      out.write("                  <input type=\"button\" class=\"btn btn-success\" id=\"btnRegister\" value=\"Enable Calls \" disabled onclick='sipRegister();' />\n");
      out.write("                            &nbsp;\n");
      out.write("                  \n");
      out.write("                   <input type=\"button\" class=\"btn btn-danger\" id=\"btnUnRegister\" value=\"Go in Offline Mode \" disabled onclick='dummyUnregister();' />\n");
      out.write("          \t\t            &nbsp;\n");
      out.write("           <!--         <input type=\"button\" class=\"btn btn-primary\" value=\"Settings\" onclick=\"parent.location='expert.htm'\" />\n");
      out.write("          \t\t            &nbsp; -->\n");
      out.write("          \t\t            \n");
      out.write("          \t\t   <button type=\"button\" class=\"btn btn-primary\" onclick='sipPublis(\"publish\")' />Publish My Status\n");
      out.write("\t\t\t\t\t\t\t</button>&nbsp;\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onclick='sipSubscribe()' />Check Status\n");
      out.write("\t\t\t\t\t\t\t</button>&nbsp;\n");
      out.write("                                                     \n");
      out.write("                <div class=\"nav-collapse\">\n");
      out.write("                    <ul class=\"nav\">\n");
      out.write("                        <li class=\"active\"><a href=\"index.html?svn=179\"></a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("               \n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div> \n");
      out.write("    <div class=\"container\">\n");
      out.write("        <div class=\"row-fluid\">\n");
      out.write("           \n");
      out.write("                <br />\n");
      out.write("                 <div style=\"display: none;\">\n");
      out.write("                <!-- <div >  togge between dis and above -->\n");
      out.write("               <table style='width: 100%' type=\"hidden\">\n");
      out.write("                    <tr>\n");
      out.write(" \n");
      out.write("                        <td>\n");
      out.write("                            <input type=\"text\" style=\"width: 100%; height: 100%\" id=\"txtDisplayName\" \n");
      out.write("                            value= ");
      out.print(request.getParameter("name"));
      out.write(" type=\"hidden\"  autocomplete='off'/>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("\n");
      out.write("                    \n");
      out.write("                    \n");
      out.write("                    <tr>\n");
      out.write("                        <td>\n");
      out.write("                            <input type=\"text\" style=\"width: 100%; height: 100%\" id=\"txtPrivateIdentity\" \n");
      out.write("                            value=");
      out.print(request.getParameter("publicIdentity"));
      out.write("   type=\"hidden\"   autocomplete='off'/>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("\n");
      out.write("                        <td>\n");
      out.write("                            <input type=\"text\" style=\"width: 100%; height: 100%\" id=\"txtPublicIdentity\" \n");
      out.write("                            value=");
      out.print(request.getParameter("privateIdentity"));
      out.write("   type=\"hidden\"  autocomplete='off' />\n");
      out.write("                       </td>\n");
      out.write("                    </tr> \n");
      out.write("                    \n");
      out.write("                    \n");
      out.write("                    <tr>\n");
      out.write("                        <td>\n");
      out.write("                            <input type=\"password\" style=\"width: 100%; height: 100%\" id=\"txtPassword\" \n");
      out.write("                            value=");
      out.print(request.getParameter("password"));
      out.write("  type=\"hidden\"  autocomplete='off'/>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("\n");
      out.write("                        <td>\n");
      out.write("                            <input type=\"text\" style=\"width: 100%; height: 100%\" id=\"txtRealm\" \n");
      out.write("                            value=");
      out.print(request.getParameter("realm"));
      out.write("  type=\"hidden\"  autocomplete='off'/>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td colspan=\"2\" align=\"right\"></td>\n");
      out.write("                    </tr>\n");
      out.write("  \n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("           \n");
      out.write("            <div id=\"maindiv\" style=\"width:100%\">\n");
      out.write("            <div id=\"calldiv\" style=\"width:48%; float:left;\">\n");
      out.write("            \n");
      out.write("            <!-- placwe for call div -->\n");
      out.write("               <div id=\"divCallCtrl\" class=\"well\"  > \n");
      out.write("                \n");
      out.write("                <h3>\n");
      out.write("                    Call Control Box\n");
      out.write("                </h3>\n");
      out.write("                <br />\n");
      out.write("                \n");
      out.write("                <!-- user profile  image  -->\n");
      out.write("                \n");
      out.write("                <img src=\"");
      out.print(request.getContextPath() );
      out.write("/CreateUserServlet1?id=");
      out.print(request.getParameter("privateIdentity"));
      out.write("&action=getProfilePic\" width=\"60\" height=\"60\" >\n");
      out.write("                           \n");
      out.write("                <!-- -------------- -->\n");
      out.write("                \n");
      out.write("                ");
      out.print(request.getParameter("name"));
      out.write(" \n");
      out.write("                <label id=\"txtRegStatus\"></label>\n");
      out.write("                <label style=\"width:100%;\" align=\"center\" id=\"txtCallStatus\"> </label>\n");
      out.write("                <table style=\"width:100%;\">\n");
      out.write("                <div id=\"divCallCtrl\"  >\n");
      out.write("                    <tr>\n");
      out.write("                     \n");
      out.write("                        <td style=\"white-space:nowrap;\">\n");
      out.write("                       <input type=\"text\" style=\"width: 100%; height:100%\" id=\"txtPhoneNumber\" value=\"\"  />                           \n");
      out.write("                      \n");
      out.write("\t\t\t\t\t   \n");
      out.write("\t\t  \n");
      out.write("\t\t\t\t\t  \t                       \n");
      out.write("                        </td>\n");
      out.write("                         \n");
      out.write("                    </tr>\n");
      out.write("               \n");
      out.write("                    <tr>\n");
      out.write("                        <td colspan=\"1\" align=\"right\">\n");
      out.write("                        \n");
      out.write("                            <div class=\"btn-toolbar\" style=\"margin: 0; vertical-align:middle\">\n");
      out.write("                                <div id=\"divBtnCallGroup\" class=\"btn-group\">\n");
      out.write("                                    <button id=\"btnCall\" disabled class=\"btn btn-primary\" data-toggle=\"dropdown\">Call</button>\n");
      out.write("                                </div>&nbsp;&nbsp;\n");
      out.write("                                <div class=\"btn-group\">\n");
      out.write("                                    <input type=\"button\" id=\"btnHangUp\" style=\"margin: 0; vertical-align:middle; height: 100%;\" class=\"btn btn-primary\" value=\"HangUp\" onclick='sipHangUp();' disabled />\n");
      out.write("                                </div>&nbsp;&nbsp;\n");
      out.write("                             </div>  \n");
      out.write("                         </td>               \n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t        <tr>\n");
      out.write("                        <td id=\"tdVideo\" class='tab-video'>\n");
      out.write("                            <div id=\"divVideo\" class='div-video'>\n");
      out.write("                                <div id=\"divVideoRemote\" style='border:1px solid #000; height:100%; width:100%'>\n");
      out.write("                                    <video class=\"video\" width=\"100%\" height=\"100%\" id=\"video_remote\" autoplay=\"autoplay\" style=\"opacity: 0; \n");
      out.write("                                        background-color: #000000; -webkit-transition-property: opacity; -webkit-transition-duration: 2s;\">\n");
      out.write("                                    </video>\n");
      out.write("                                </div>\n");
      out.write("                                <div id=\"divVideoLocal\" style='border:0px solid #000'>\n");
      out.write("                                    <video class=\"video\" width=\"88px\" height=\"72px\" id=\"video_local\" autoplay=\"autoplay\" muted=\"true\" style=\"opacity: 0;\n");
      out.write("                                        margin-top: -80px; margin-left: 5px; background-color: #000000; -webkit-transition-property: opacity;\n");
      out.write("                                        -webkit-transition-duration: 2s;\">\n");
      out.write("                                    </video>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                       <td align='center'>\n");
      out.write("                            <div id='divCallOptions' class='call-options' style='opacity: 0; margin-top: 3px'>\n");
      out.write("                                <input type=\"button\" class=\"btn\" style=\"\" id=\"btnFullScreen\" value=\"FullScreen\" disabled onclick='toggleFullScreen();' /> &nbsp;\n");
      out.write("                                <input type=\"button\" class=\"btn\" style=\"\" id=\"btnHoldResume\" value=\"Hold\" onclick='sipToggleHoldResume();' /> &nbsp;\n");
      out.write("                                <input type=\"button\" class=\"btn\" style=\"\" id=\"btnTransfer\" value=\"Transfer\" onclick='sipTransfer();' /> &nbsp;\n");
      out.write("                                <input type=\"button\" class=\"btn\" style=\"\" id=\"btnKeyPad\" value=\"KeyPad\" onclick='openKeyPad();' />\n");
      out.write("                            </div>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    \t </div>\n");
      out.write("                </table> \n");
      out.write("       </div>\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("           \n");
      out.write("            \n");
      out.write("            <div id=\"msgdiv\" style=\"width:50%; float:right;\">\n");
      out.write("            \n");
      out.write("               <!-- placwe for msg div -->\n");
      out.write("            \n");
      out.write("            <div id=\"divCallCtrl\" class=\"well\" style=\"display:table-cell; float:right;\">\n");
      out.write("\t\t                <h3>\n");
      out.write("\t\t                 <left>   Message Control Box</left>\n");
      out.write("\t\t                </h3>\n");
      out.write("\t\t\t    <table border =\"0\">\n");
      out.write("\t\t\t\t<tr><td width=\"50px\">To:</td><td><input type=\"text\" id=\"uri\" placeholder=\"Enter username eg: John\" onblur=\"chatValidation();\" /></td></tr>\n");
      out.write("\t\t\t\t<tr><td width=\"50px\"></td><td><div class=\"chatbox\" id=\"sipMsgs\" style=\"width: 220px;height: 104px;overflow: auto;border: 1px solid gray;background-color: white;\"></div></td></tr>\t\t\n");
      out.write("\t\t\t\t<tr><td width=\"50px\">Chat:</td><td><input type=\"text\" id=\"msg\" placeholder=\"Press enter to submit\" onKeyPress=\"enterpressalert(event)\"/></td>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t</div>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            </div>\n");
      out.write("            \t\n");
      out.write("         \n");
      out.write("        </div>\n");
      out.write("        <!-- message portion -->\n");
      out.write("        \n");
      out.write("        <input type=\"hidden\" id =\"uRIContactPage\" value=\"");
      out.print(request.getParameter("ToCallName"));
      out.write("\"> \n");
      out.write("            \n");
      out.write("\t\t\t\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        <!--  Message  -->\n");
      out.write("        <!--  <table border =\"0\">\n");
      out.write("\t\t\t\t\t<tr>   <td>To      : <input type=\"text\" id=\"uri\"/> <td> </tr>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<tr>    <td>Window : <textarea id=\"textArea\" disabled=\"disabled\"  rows=\"8\" cols=\"50\"></textarea>\t</td> </tr>\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<tr>\t<td>Message: <input type=\"text\" id=\"msg\"/>\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onclick='sipIM(\"message\")'/>chat</button> </td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t</table>-->\n");
      out.write("\t\t\n");
      out.write("<!-- \t\t Publish  Subscribe\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td><button type=\"button\" class=\"btn btn-primary\" onclick='sipPublis(\"publish\")' />Publish My Status\n");
      out.write("\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onclick='sipSubscribe()' />Check Status\n");
      out.write("\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t</td>\n");
      out.write("\t        </tr>\n");
      out.write("\t\t</table> -->\n");
      out.write("\t\t<h3 align=\"center\" id=\"serverReply\"></h3>\t\n");
      out.write("\t\t\t\t\n");
      out.write("        <br />\n");
      out.write("        <footer>\n");
      out.write("       \n");
      out.write("            <!-- Creates all ATL/COM objects right now \n");
      out.write("                Will open confirmation dialogs if not already done\n");
      out.write("            -->\n");
      out.write("            <object id=\"fakeVideoDisplay\" classid=\"clsid:5C2C407B-09D9-449B-BB83-C39B7802A684\" style=\"visibility:hidden;\"> </object>\n");
      out.write("            <object id=\"fakeLooper\" classid=\"clsid:7082C446-54A8-4280-A18D-54143846211A\" style=\"visibility:hidden;\"> </object>\n");
      out.write("            <object id=\"fakeSessionDescription\" classid=\"clsid:DBA9F8E2-F9FB-47CF-8797-986A69A1CA9C\" style=\"visibility:hidden;\"> </object>\n");
      out.write("            <object id=\"fakeNetTransport\" classid=\"clsid:5A7D84EC-382C-4844-AB3A-9825DBE30DAE\" style=\"visibility:hidden;\"> </object>\n");
      out.write("            <object id=\"fakePeerConnection\" classid=\"clsid:56D10AD3-8F52-4AA4-854B-41F4D6F9CEA3\" style=\"visibility:hidden;\"> </object>\n");
      out.write("            <!-- \n");
      out.write("        try {\n");
      out.write("                NPAPI  browsers: Safari, Opera and Firefox\n");
      out.write("            -->\n");
      out.write("            <!--embed id=\"WebRtc4npapi\" type=\"application/w4a\" width='1' height='1' style='visibility:hidden;' /-->\n");
      out.write("        </footer>\n");
      out.write("    </div>\n");
      out.write("    <!-- /container -->\n");
      out.write("\n");
      out.write("    <!-- Glass Panel -->\n");
      out.write("    <div id='divGlassPanel' class='glass-panel' style='visibility:hidden'></div>\n");
      out.write("    <!-- KeyPad Div -->\n");
      out.write("    <div id='divKeyPad' class='span2 well div-keypad' style=\"left:0px; top:0px; width:250; height:240; visibility:hidden\">\n");
      out.write("        <table style=\"width: 100%; height: 100%\">\n");
      out.write("            <tr><td><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"1\" onclick=\"sipSendDTMF('1');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"2\" onclick=\"sipSendDTMF('2');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"3\" onclick=\"sipSendDTMF('3');\"/></td></tr>\n");
      out.write("            <tr><td><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"4\" onclick=\"sipSendDTMF('4');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"5\" onclick=\"sipSendDTMF('5');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"6\" onclick=\"sipSendDTMF('6');\"/></td></tr>\n");
      out.write("            <tr><td><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"7\" onclick=\"sipSendDTMF('7');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"8\" onclick=\"sipSendDTMF('8');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"9\" onclick=\"sipSendDTMF('9');\"/></td></tr>\n");
      out.write("            <tr><td><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"*\" onclick=\"sipSendDTMF('*');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"0\" onclick=\"sipSendDTMF('0');\"/><input type=\"button\" style=\"width: 33%\" class=\"btn\" value=\"#\" onclick=\"sipSendDTMF('#');\"/></td></tr>\n");
      out.write("            <tr><td colspan=3><input type=\"button\" style=\"width: 100%\" class=\"btn btn-medium btn-danger\" value=\"close\" onclick=\"closeKeyPad();\" /></td></tr>\n");
      out.write("        </table>\n");
      out.write("    </div>\n");
      out.write("    <!-- Call button options -->\n");
      out.write("    <ul id=\"ulCallOptions\" class=\"dropdown-menu\" style=\"visibility:hidden\">\n");
      out.write("        <li><a href=\"#\" onclick='sipCall(\"call-audio\");'>Audio</a></li>\n");
      out.write("        <li><a href=\"#\" onclick='sipCall(\"call-audiovideo\");'>Video</a></li>\n");
      out.write("<!--         <li id='liScreenShare' ><a href=\"#\" onclick='sipCall(\"call-screenshare\");'>Screen Share</a></li>\n");
      out.write("        <li class=\"divider\"></li>\n");
      out.write("        <li><a href=\"#\" onclick='uiDisableCallOptions();'><b>Disable these options</b></a></li> -->\n");
      out.write("    </ul>\n");
      out.write("\n");
      out.write("    <!-- Le javascript\n");
      out.write("    ================================================== -->\n");
      out.write("    <!-- Placed at the end of the document so the pages load faster -->\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/jquery.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-transition.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-alert.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-modal.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-dropdown.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-scrollspy.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-tab.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-tooltip.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-popover.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-button.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-collapse.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-carousel.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/bootstrap-typeahead.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"./assets/js/jquery.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"./assets/js/jquery.gemoticons.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- Audios -->\n");
      out.write("    <audio id=\"audio_remote\" autoplay=\"autoplay\" />\n");
      out.write("    <audio id=\"ringtone\" loop src=\"sounds/ringtone.wav\" />\n");
      out.write("    <audio id=\"ringbacktone\" loop src=\"sounds/ringbacktone.wav\" />\n");
      out.write("    <audio id=\"dtmfTone\" src=\"sounds/dtmf.wav\" />\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
