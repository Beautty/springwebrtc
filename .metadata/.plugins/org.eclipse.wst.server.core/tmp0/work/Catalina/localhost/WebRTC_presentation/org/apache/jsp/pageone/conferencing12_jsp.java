package org.apache.jsp.pageone;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class conferencing12_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.List<java.lang.String> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.List<java.lang.String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>ALL Services in One</title>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <meta charset=\"utf-8\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\r\n");
      out.write("        <link rel=\"author\" type=\"text/html\" href=\"https://plus.google.com/100325991024054712503\">\r\n");
      out.write("        <meta name=\"author\" content=\"Pawan\">\r\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("       \r\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/style_blue.css\" type=\"text/css\" />\r\n");
      out.write("        \r\n");
      out.write("       \r\n");
      out.write("        \r\n");
      out.write("        <style>\r\n");
      out.write("            audio, video {\r\n");
      out.write("                -moz-transition: all 1s ease;\r\n");
      out.write("                -ms-transition: all 1s ease;\r\n");
      out.write("                \r\n");
      out.write("                -o-transition: all 1s ease;\r\n");
      out.write("                -webkit-transition: all 1s ease;\r\n");
      out.write("                transition: all 1s ease;\r\n");
      out.write("                vertical-align: top;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            input {\r\n");
      out.write("                border: 1px solid #d9d9d9;\r\n");
      out.write("                border-radius: 1px;\r\n");
      out.write("              \r\n");
      out.write("                margin: .2em;\r\n");
      out.write("                width: 20%;\r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            select {\r\n");
      out.write("                border: 1px solid #d9d9d9;\r\n");
      out.write("                border-radius: 1px;\r\n");
      out.write("                height: 50px;\r\n");
      out.write("                margin-left: 1em;\r\n");
      out.write("                margin-right: -12px;\r\n");
      out.write("                padding: 1.1em;\r\n");
      out.write("                vertical-align: 6px;\r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .setup {\r\n");
      out.write("                border-bottom-left-radius: 2;\r\n");
      out.write("                border-top-left-radius: 2;\r\n");
      out.write("                \r\n");
      out.write("                height: 47px;\r\n");
      out.write("                margin-left: -9px;\r\n");
      out.write("                margin-top: 1px;\r\n");
      out.write("                position: absolute;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            p { padding: 1em; }\r\n");
      out.write("\r\n");
      out.write("            #chat-output div, #file-progress div {\r\n");
      out.write("                border: 1px solid black;\r\n");
      out.write("                border-bottom: 0;\r\n");
      out.write("                padding: .1em .4em;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            #chat-output, #file-progress {\r\n");
      out.write("                margin: 0 0 0 .4em;\r\n");
      out.write("                max-height: 12em;\r\n");
      out.write("                overflow: auto;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .data-box input {\r\n");
      out.write("                border: 1px solid black;\r\n");
      out.write("                font-family: inherit;\r\n");
      out.write("                font-size: 1em;\r\n");
      out.write("                margin: .1em .3em;\r\n");
      out.write("                outline: none;\r\n");
      out.write("                padding: .1em .2em;\r\n");
      out.write("                width: 97%;\r\n");
      out.write("            }\r\n");
      out.write("   \r\n");
      out.write("        </style>\r\n");
      out.write("        <script>\r\n");
      out.write("            document.createElement('article');\r\n");
      out.write("            document.createElement('footer');\r\n");
      out.write("        </script>\r\n");
      out.write("        \r\n");
      out.write("       \r\n");
      out.write("        <script src=\"https://www.webrtc-experiment.com/RTCMultiConnection-v1.4.js\"> </script>\r\n");
      out.write("    </head>\r\n");
      out.write("\r\n");
      out.write("    <body>\r\n");
      out.write("                \r\n");
      out.write("                <section style=\"margin-top:10px;\">\r\n");
      out.write("                <h2 style=\"display: block;text-align:left; font-size: 1em;\"><span style=\"color:#0370ea;\">Conferencing Details</span></h2>\r\n");
      out.write("              <select id=\"session\" title=\"Session\">\r\n");
      out.write("              \r\n");
      out.write("                      <option selected>Select mode of Conferencing</option>         \r\n");
      out.write("                        <option>audio+video+data</option>\t           \r\n");
      out.write("                        <option >audio+video</option>    \r\n");
      out.write("                        <option>audio+data</option>\r\n");
      out.write("                        <option>video+data</option>\r\n");
      out.write("                        <option>audio</option>\r\n");
      out.write("                        <option>video</option>\r\n");
      out.write("                        <option>data</option>                      \r\n");
      out.write("                    </select>\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                    <select id=\"direction\" title=\"Direction\">\r\n");
      out.write("                          <option selected>Select way of Conferencing</option>\r\n");
      out.write("                        <option>many-to-many</option>\r\n");
      out.write("                        <option>one-to-one</option>\r\n");
      out.write("                        <option>one-to-many</option>\r\n");
      out.write("                        <option>one-way</option>\r\n");
      out.write("                        </table>\r\n");
      out.write("                    </select>\r\n");
      out.write("                    \r\n");
      out.write("                    <input type=\"text\" id=\"session-name\" placeholder=\"Create Conference Room\" style=\"height:45px;text-align:center; margin-left:15px;margin-right:15px;margin-top:-8px;margin-down:47px;\">\r\n");
      out.write("                    <button id=\"setup-new-session\" class=\"setup\">Click To Start Conferencing</button>\r\n");
      out.write("                </section>\r\n");
      out.write("                \r\n");
      out.write("                <!-- list of all available broadcasting rooms -->\r\n");
      out.write("                <table style=\"width: 100%;\" id=\"rooms-list\"></table>\r\n");
      out.write("                \r\n");
      out.write("                <!-- local/remote videos container -->\r\n");
      out.write("                <h2 style=\"display: block;text-align:left; font-size: 1em;\"><span style=\"color:#0370ea;\">Video Conferencing </span></h2>\r\n");
      out.write("                <div id=\"videos-container\"></div>\r\n");
      out.write("            </section>\r\n");
      out.write("              <section class=\"experiment data-box\">\r\n");
      out.write("                \r\n");
      out.write("                 <h2 style=\"display:block;text-align:left; font-size: 1em;\"><span style=\"color:#0370ea;\">Messaging And File Sharing</span></h2>\r\n");
      out.write("                <table style=\"width: 100%;\">\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>\r\n");
      out.write("                          <h2 style=\"display: block; font-size: 1em; text-align:left;\"><span style=\"color:#0370ea;\">Text Chat</span></h2>\r\n");
      out.write("\r\n");
      out.write("                            <div id=\"chat-output\"></div>\r\n");
      out.write("                            <input type=\"text\" id=\"chat-input\" style=\"font-size: 1.2em;\" placeholder=\"chat message\" disabled>\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <h2 style=\"display: block; font-size: 1em; text-align:left;\"><span style=\"color:#0370ea;\">Share Files </span></h2>\r\n");
      out.write("                            <input type=\"file\" id=\"file\"  disabled>\r\n");
      out.write("\r\n");
      out.write("                            <div id=\"file-progress\"></div>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </table>\r\n");
      out.write("            </section>\r\n");
      out.write("            <section></section>\r\n");
      out.write("            <section></section>\r\n");
      out.write("        \r\n");
      out.write("            <script>\r\n");
      out.write("               \r\n");
      out.write("\r\n");
      out.write("                var connection = new RTCMultiConnection();\r\n");
      out.write("                connection.session = {\r\n");
      out.write("                    audio: true,\r\n");
      out.write("                    video: true\r\n");
      out.write("                };\r\n");
      out.write("                connection.enableSessionReinitiation = false;\r\n");
      out.write("                connection.openSignalingChannel = function(config) {\r\n");
      out.write("                    var channel = config.channel || this.channel;\r\n");
      out.write("                   \r\n");
      out.write("                    var sender = Math.round(Math.random() * 999999999) + 999999999;\r\n");
      out.write("                    var websocket = new WebSocket('ws://10.1.5.38:8888');\r\n");
      out.write("                    websocket.channel = config.channel || this.channel;\r\n");
      out.write("                    websocket.onopen = function() {\r\n");
      out.write("                        websocket.push(JSON.stringify({\r\n");
      out.write("                            open: true,\r\n");
      out.write("                            channel: websocket.channel\r\n");
      out.write("                        }));\r\n");
      out.write("                        if (config.callback) config.callback(websocket);\r\n");
      out.write("                    };\r\n");
      out.write("                    websocket.onmessage = function(event) {\r\n");
      out.write("                        config.onmessage(JSON.parse(event.data));\r\n");
      out.write("                    };\r\n");
      out.write("                    websocket.push = websocket.send;\r\n");
      out.write("                    websocket.send = function(data) {\r\n");
      out.write("                        websocket.push(JSON.stringify({\r\n");
      out.write("                            data: data,\r\n");
      out.write("                            channel: websocket.channel\r\n");
      out.write("                        }));\r\n");
      out.write("                    };\r\n");
      out.write("                    //socket.on('message', config.onmessage);\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var roomsList = document.getElementById('rooms-list'), sessions = { };\r\n");
      out.write("                connection.onNewSession = function(session) {\r\n");
      out.write("                    if (sessions[session.sessionid]) return;\r\n");
      out.write("                    sessions[session.sessionid] = session;\r\n");
      out.write("\r\n");
      out.write("                    var tr = document.createElement('tr');\r\n");
      out.write("                    tr.innerHTML = '<td><strong>' + session.extra['session-name'] + '</strong> is an active session.</td>' +\r\n");
      out.write("                        '<td><button class=\"join\">Join</button></td>';\r\n");
      out.write("                    roomsList.insertBefore(tr, roomsList.firstChild);\r\n");
      out.write("\r\n");
      out.write("                    tr.querySelector('.join').setAttribute('data-sessionid', session.sessionid);\r\n");
      out.write("                    tr.querySelector('.join').onclick = function() {\r\n");
      out.write("                        this.disabled = true;\r\n");
      out.write("\r\n");
      out.write("                        session = sessions[this.getAttribute('data-sessionid')];\r\n");
      out.write("                        if (!session) alert('No room to join.');\r\n");
      out.write("\r\n");
      out.write("                        connection.join(session);\r\n");
      out.write("                    };\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var videosContainer = document.getElementById('videos-container') || document.body;\r\n");
      out.write("                connection.onstream = function(e) {\r\n");
      out.write("                    videosContainer.insertBefore(e.mediaElement, videosContainer.firstChild);\r\n");
      out.write("                    rotateInCircle(e.mediaElement);\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                connection.onstreamended = function(e) {\r\n");
      out.write("                    if (e.mediaElement.parentNode) {\r\n");
      out.write("                        e.mediaElement.parentNode.removeChild(e.mediaElement);\r\n");
      out.write("                        scaleVideos();\r\n");
      out.write("                    }\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var setupNewSession = document.getElementById('setup-new-session');\r\n");
      out.write("\r\n");
      out.write("                setupNewSession.onclick = function() {\r\n");
      out.write("                    setupNewSession.disabled = true;\r\n");
      out.write("\r\n");
      out.write("                    var direction = document.getElementById('direction').value;\r\n");
      out.write("                    var _session = document.getElementById('session').value;\r\n");
      out.write("                    var splittedSession = _session.split('+');\r\n");
      out.write("\r\n");
      out.write("                    var session = { };\r\n");
      out.write("                    for (var i = 0; i < splittedSession.length; i++) {\r\n");
      out.write("                        session[splittedSession[i]] = true;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    var maxParticipantsAllowed = 256;\r\n");
      out.write("\r\n");
      out.write("                    if (direction == 'one-to-one') maxParticipantsAllowed = 1;\r\n");
      out.write("                    if (direction == 'one-to-many') session.broadcast = true;\r\n");
      out.write("                    if (direction == 'one-way') session.oneway = true;\r\n");
      out.write("\r\n");
      out.write("                    var sessionName = document.getElementById('session-name').value;\r\n");
      out.write("                    connection.extra = {\r\n");
      out.write("                        'session-name': sessionName || 'Anonymous'\r\n");
      out.write("                    };\r\n");
      out.write("\r\n");
      out.write("                    connection.session = session;\r\n");
      out.write("                    connection.maxParticipantsAllowed = maxParticipantsAllowed;\r\n");
      out.write("                    connection.open();\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                function rotateInCircle(video) {\r\n");
      out.write("                    video.style[navigator.mozGetUserMedia ? 'transform' : '-webkit-transform'] = 'rotate(0deg)';\r\n");
      out.write("                    setTimeout(function() {\r\n");
      out.write("                        video.style[navigator.mozGetUserMedia ? 'transform' : '-webkit-transform'] = 'rotate(360deg)';\r\n");
      out.write("                    }, 1000);\r\n");
      out.write("                    scaleVideos();\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                function scaleVideos() {\r\n");
      out.write("                    var videos = document.querySelectorAll('video'),\r\n");
      out.write("                        length = videos.length, video;\r\n");
      out.write("                    var minus = 130;\r\n");
      out.write("                    var windowHeight = 700;\r\n");
      out.write("                    var windowWidth = 600;\r\n");
      out.write("                    var windowAspectRatio = windowWidth / windowHeight;\r\n");
      out.write("                    var videoAspectRatio = 4 / 3;\r\n");
      out.write("                    var blockAspectRatio;\r\n");
      out.write("                    var tempVideoWidth = 0;\r\n");
      out.write("                    var maxVideoWidth = 0;\r\n");
      out.write("\r\n");
      out.write("                    for (var i = length; i > 0; i--) {\r\n");
      out.write("                        blockAspectRatio = i * videoAspectRatio / Math.ceil(length / i);\r\n");
      out.write("                        if (blockAspectRatio <= windowAspectRatio) {\r\n");
      out.write("                            tempVideoWidth = videoAspectRatio * windowHeight / Math.ceil(length / i);\r\n");
      out.write("                        } else {\r\n");
      out.write("                            tempVideoWidth = windowWidth / i;\r\n");
      out.write("                        }\r\n");
      out.write("                        if (tempVideoWidth > maxVideoWidth)\r\n");
      out.write("                            maxVideoWidth = tempVideoWidth;\r\n");
      out.write("                    }\r\n");
      out.write("                    for (var i = 0; i < length; i++) {\r\n");
      out.write("                        video = videos[i];\r\n");
      out.write("                        if (video)\r\n");
      out.write("                            video.width = maxVideoWidth - minus;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                window.onresize = scaleVideos;\r\n");
      out.write("\r\n");
      out.write("                connection.onmessage = function(e) {\r\n");
      out.write("                    appendDIV(e.data);\r\n");
      out.write("\r\n");
      out.write("                    console.debug(e.userid, 'posted', e.data);\r\n");
      out.write("                    console.log('latency:', e.latency, 'ms');\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                // on data connection gets open\r\n");
      out.write("                connection.onopen = function() {\r\n");
      out.write("                    if (document.getElementById('chat-input')) document.getElementById('chat-input').disabled = false;\r\n");
      out.write("                    if (document.getElementById('file')) document.getElementById('file').disabled = false;\r\n");
      out.write("                    if (document.getElementById('open-new-session')) document.getElementById('open-new-session').disabled = true;\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                // sending/receiving file(s)\r\n");
      out.write("                // connection.autoSaveToDisk = false;\r\n");
      out.write("                connection.onFileProgress = function(packets, uuid) {\r\n");
      out.write("                    appendDIV(uuid + ': ' + packets.remaining + '..', 'file', fileProgress);\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                connection.onFileSent = function(file) {\r\n");
      out.write("                    appendDIV(file.name + ' sent.', fileProgress);\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                connection.onFileReceived = function(fileName) {\r\n");
      out.write("                    appendDIV(fileName + ' received.', fileProgress);\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                document.getElementById('file').onchange = function() {\r\n");
      out.write("                    connection.send(this.files[0]);\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var chatOutput = document.getElementById('chat-output'),\r\n");
      out.write("                    fileProgress = document.getElementById('file-progress');\r\n");
      out.write("\r\n");
      out.write("                function appendDIV(data, parent) {\r\n");
      out.write("                    var div = document.createElement('div');\r\n");
      out.write("                    div.innerHTML = data;\r\n");
      out.write("\r\n");
      out.write("                    if (!parent) chatOutput.insertBefore(div, chatOutput.firstChild);\r\n");
      out.write("                    else fileProgress.insertBefore(div, fileProgress.firstChild);\r\n");
      out.write("\r\n");
      out.write("                    div.tabIndex = 0;\r\n");
      out.write("                    div.focus();\r\n");
      out.write("\r\n");
      out.write("                    chatInput.focus();\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                var chatInput = document.getElementById('chat-input');\r\n");
      out.write("                chatInput.onkeypress = function(e) {\r\n");
      out.write("                    if (e.keyCode !== 13 || !this.value) return;\r\n");
      out.write("                    appendDIV(this.value);\r\n");
      out.write("\r\n");
      out.write("                    // sending text message\r\n");
      out.write("                    connection.send(this.value);\r\n");
      out.write("\r\n");
      out.write("                    this.value = '';\r\n");
      out.write("                    this.focus();\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                connection.connect();\r\n");
      out.write("            </script>\r\n");
      out.write("              \r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
